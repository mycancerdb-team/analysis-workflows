apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: immuno-rnaseq-workflow
spec:
  volumes:
    - name: pvc-reference
      persistentVolumeClaim:
        claimName: workflow-ref-hg38-dev #### This is subject to change.
  imagePullSecrets:
    - name: mgbio-cred
    - name: mcdb-bot
  templates:
  - name: trim-fastq
    inputs:
      parameters:
      - name: pvc-name
      - name: output-dir
      - name: "cpu"
      - name: "mem"
      - name: threads
      - name: rna-fastq-r1
      - name: rna-fastq-r2
      - name: trim-adapter-file
      - name: trim-adapter-end
      - name: trim-adapter-min-overlap
      - name: trim-max_uncalled
      - name: trim-min-readlength
    podSpecPatch: '{"containers":[{"name":"main", "resources":{"requests":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }, "limits":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }}}]}'
    volumes:
      - name: '{{inputs.parameters.pvc-name}}'
        persistentVolumeClaim:
          claimName: '{{inputs.parameters.pvc-name}}'
    container:
      image: mgibio/bisulfite:v1.4
      command: ['/opt/flexbar/flexbar']
      args: ["--adapter-min-overlap", "{{inputs.parameters.trim-adapter-min-overlap}}", "--adapter-trim-end", "{{inputs.parameters.trim-adapter-end}}", "--adapters", "{{inputs.parameters.trim-adapter-file}}", "--max-uncalled", "{{inputs.parameters.trim-max_uncalled}}", "--min-read-length", "{{inputs.parameters.trim-min-readlength}}", "--threads", "{{inputs.parameters.threads}}", "--reads", "{{inputs.parameters.rna-fastq-r1}}", "--reads2", "{{inputs.parameters.rna-fastq-r2}}", "--target", "{{inputs.parameters.output-dir}}/trimmed_read/trimmed_read", "--stdout-log"]
      imagePullPolicy: Always
      volumeMounts:
      - name: '{{inputs.parameters.pvc-name}}'
        mountPath: /data
      - name: pvc-reference
        mountPath: /ref-hg38
    outputs:
      parameters:
      - name: trimmed_fastq1
        value: "{{inputs.parameters.output-dir}}/trimmed_read/trimmed_read_1.fastq"
      - name: trimmed_fastq2
        value: "{{inputs.parameters.output-dir}}/trimmed_read/trimmed_read_2.fastq"
###########
  - name: hisat2-align
    inputs:
      parameters:
      - name: pvc-name
      - name: output-dir
      - name: "cpu"
      - name: "mem"
      - name: threads
      - name: trimmed_fastq1
      - name: trimmed_fastq2
      - name: read_group_id
      - name: read_group_fields
      - name: strand
      - name: reference_index
    podSpecPatch: '{"containers":[{"name":"main", "resources":{"requests":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }, "limits":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }}}]}'
    volumes:
      - name: '{{inputs.parameters.pvc-name}}'
        persistentVolumeClaim:
          claimName: '{{inputs.parameters.pvc-name}}'
    container:
      image: docker.cancerdb.io/mgbio-workflow/hisat2-align:1.0.0
      imagePullPolicy: Always
      volumeMounts:
      - name: '{{inputs.parameters.pvc-name}}'
        mountPath: /data
      - name: pvc-reference
        mountPath: /ref-hg38
      env:
      - name: THREADS
        value: "{{inputs.parameters.threads}}"
      - name: FASTQ1
        value: "{{inputs.parameters.trimmed_fastq1}}"
      - name: FASTQ2
        value: "{{inputs.parameters.trimmed_fastq2}}"
      - name: REFINDEX
        value: "{{inputs.parameters.reference_index}}"
      - name: READGRP
        value: "{{inputs.parameters.read_group_id}}"
      - name: READGRPFIELDS
        value: "{{inputs.parameters.read_group_fields}}"
      - name: OUTPUTDIR
        value: "{{inputs.parameters.output-dir}}"
      - name: STRAND
        value: "{{inputs.parameters.strand}}"
    outputs:
      parameters:
      - name: aligned_bam
        value: "{{inputs.parameters.output-dir}}/hisat2_align/aligned_bam/aligned.bam"
#############
  - name: kallisto-run
    inputs:
      parameters:
      - name: pvc-name
      - name: output-dir
      - name: "cpu"
      - name: "mem"
      - name: threads
      - name: trimmed_fastq1
      - name: trimmed_fastq2
      - name: strand
      - name: kallisto_index
    podSpecPatch: '{"containers":[{"name":"main", "resources":{"requests":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }, "limits":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }}}]}'
    volumes:
      - name: '{{inputs.parameters.pvc-name}}'
        persistentVolumeClaim:
          claimName: '{{inputs.parameters.pvc-name}}'
    container:
      image: mgibio/rnaseq:1.0.0
      command: ["/usr/bin/kallisto"]
      args: ["quant",  "-i", "{{inputs.parameters.kallisto_index}}", "-o", "{{inputs.parameters.output-dir}}/kallisto", "-t", "{{inputs.parameters.threads}}", "-b", "100", "--fusion", "--fr-stranded", "{{inputs.parameters.trimmed_fastq1}}", "{{inputs.parameters.trimmed_fastq2}}"]
      imagePullPolicy: Always
      volumeMounts:
      - name: '{{inputs.parameters.pvc-name}}'
        mountPath: /data
      - name: pvc-reference
        mountPath: /ref-hg38
    outputs:
      parameters:
      - name: expression_transcript_table
        value: "{{inputs.parameters.output-dir}}/kallisto/abundance.tsv"
      - name: expression_transcript_h5
        value: "{{inputs.parameters.output-dir}}/kallisto/abundance.h5"
      - name: fusion_evidence
        value: "{{inputs.parameters.output-dir}}/kallisto/fusion.txt"
##############
  - name: rna-transcript-to-gene
    inputs:
      parameters:
      - name: pvc-name
      - name: output-dir
      - name: "cpu"
      - name: "mem"
      - name: transcript_table_h5
      - name: gene_transcript_lookup_table
    podSpecPatch: '{"containers":[{"name":"main", "resources":{"requests":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }, "limits":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }}}]}'
    volumes:
      - name: '{{inputs.parameters.pvc-name}}'
        persistentVolumeClaim:
          claimName: '{{inputs.parameters.pvc-name}}'
    container:
      image: mgibio/rnaseq:1.0.0
      workingDir: "{{inputs.parameters.output-dir}}"
      command: ["/usr/local/bin/Rscript"]
      args: ["/usr/src/transcript_to_gene.R", "{{inputs.parameters.gene_transcript_lookup_table}}", "{{inputs.parameters.transcript_table_h5}}"]
      imagePullPolicy: Always
      volumeMounts:
      - name: '{{inputs.parameters.pvc-name}}'
        mountPath: /data
      - name: pvc-reference
        mountPath: /ref-hg38
    outputs:
      parameters:
      - name: gene_abundance
        value: "{{inputs.parameters.output-dir}}/gene_abundance.tsv"
##############
  - name: merge-bams
    inputs:
      parameters:
      - name: pvc-name
      - name: output-dir
      - name: threads
      - name: "cpu"
      - name: "mem"
      - name: bam1
      - name: bam2
    podSpecPatch: '{"containers":[{"name":"main", "resources":{"requests":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }, "limits":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }}}]}'
    volumes:
      - name: '{{inputs.parameters.pvc-name}}'
        persistentVolumeClaim:
          claimName: '{{inputs.parameters.pvc-name}}'
    container:
      image: mgibio/biscuit:0.3.8.2
      command: ["/usr/bin/sambamba_merge"]
      args: ["{{inputs.parameters.threads}}", "{{inputs.parameters.output-dir}}/merged_bam/merged.bam", "{{inputs.parameters.bam1}}", "{{inputs.parameters.bam2}}"]
      imagePullPolicy: Always
      volumeMounts:
      - name: "{{inputs.parameters.pvc-name}}"
        mountPath: /data
      - name: pvc-reference
        mountPath: /ref-hg38
    outputs:
      parameters:
      - name: merged_bam
        value: "{{inputs.parameters.output-dir}}/merged_bam/merged.bam"
      - name: merged_bam_bai
        value: "{{inputs.parameters.output-dir}}/merged_bam/merged.bai"
##############
  - name: index-bam
    inputs:
      parameters:
      - name: "cpu"
      - name: "mem"
      - name: id
      - name: output-dir
      - name: pvc-name
      - name: bam-file ## Merged Or Aligned
    podSpecPatch: '{"containers":[{"name":"main", "resources":{"requests":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }, "limits":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }}}]}'
    volumes:
      - name: '{{inputs.parameters.pvc-name}}'
        persistentVolumeClaim:
          claimName: '{{inputs.parameters.pvc-name}}'
    container:
      image: mgibio/samtools-cwl:1.0.0
      command: ["/opt/samtools/bin/samtools"]
      args: ["index", "{{inputs.parameters.bam-file}}", "{{inputs.parameters.output-dir}}/{{inputs.parameters.id}}/{{inputs.parameters.id}}.bai"]
      imagePullPolicy: Always
      volumeMounts:
      - name: '{{inputs.parameters.pvc-name}}'
        mountPath: /data
      - name: pvc-reference
        mountPath: /ref-hg38
    outputs:
      parameters:
      - name: indexed_bam_bai
        value: "{{inputs.parameters.output-dir}}/{{inputs.parameters.id}}/{{inputs.parameters.id}}.bai"
#################
  - name: mark-dup
    inputs:
      parameters:
      - name: "cpu" #10
      - name: "mem" #30
      - name: id
      - name: threads
      - name: output-dir
      - name: pvc-name
      - name: bam-file ##Merge or Aligned
      - name: input-sort-order
    podSpecPatch: '{"containers":[{"name":"main", "resources":{"requests":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }, "limits":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }}}]}'
    volumes:
      - name: '{{inputs.parameters.pvc-name}}'
        persistentVolumeClaim:
          claimName: '{{inputs.parameters.pvc-name}}'
    container:
      image: docker.cancerdb.io/mgbio-workflow/mark_duplicates-cwl:1.0.1
      command: ["/root/markduplicates_helper.sh"]
      args: ["{{inputs.parameters.bam-file}}", "{{inputs.parameters.threads}}", "{{inputs.parameters.output-dir}}/{{inputs.parameters.id}}/MarkedSorted.bam", "{{inputs.parameters.output-dir}}/{{inputs.parameters.id}}.mark_dups_metrics.txt", "{{inputs.parameters.input-sort-order}}"]
      imagePullPolicy: Always
      volumeMounts:
      - name: '{{inputs.parameters.pvc-name}}'
        mountPath: /data
      - name: pvc-reference
        mountPath: /ref-hg38
    outputs:
      parameters:
      - name: marksorted_bam
        value: "{{inputs.parameters.output-dir}}/{{inputs.parameters.id}}/MarkedSorted.bam"
      - name: marksorted-bam_bai
        value: "{{inputs.parameters.output-dir}}/{{inputs.parameters.id}}/MarkedSorted.bam.bai"
      - name: metrics_file
        value: "{{inputs.parameters.output-dir}}/{{inputs.parameters.id}}.mark_dups_metrics.txt"
#################
  - name: stringtie
    inputs:
      parameters:
      - name: "cpu"
      - name: "mem"
      - name: threads
      - name: pvc-name
      - name: output-dir
      - name: bam-file
      - name: strand
      - name: id #sample-name
      - name: reference-annotation
    podSpecPatch: '{"containers":[{"name":"main", "resources":{"requests":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }, "limits":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }}}]}'
    volumes:
      - name: '{{inputs.parameters.pvc-name}}'
        persistentVolumeClaim:
          claimName: '{{inputs.parameters.pvc-name}}'
    container:
      image: docker.cancerdb.io/mgbio-workflow/stringtie:1.0.0
      env:
      - name: THREADS
        value: "{{inputs.parameters.threads}}"
      - name: STRAND
        value: "{{inputs.parameters.strand}}"
      - name: OUTPUTDIR
        value: "{{inputs.parameters.output-dir}}"
      - name: REF_ANNOTATION
        value: "{{inputs.parameters.reference-annotation}}"
      - name: SAMPLE_NAME
        value: "{{inputs.parameters.id}}"
      - name: BAM
        value: "{{inputs.parameters.bam-file}}"
      command: ["/bin/bash", "/root/markduplicates_helper.sh"]
      imagePullPolicy: Always
      volumeMounts:
      - name: '{{inputs.parameters.pvc-name}}'
        mountPath: /data
      - name: pvc-reference
        mountPath: /ref-hg38
    outputs:
      parameters:
      - name: transcript_gtf
        value: "{{inputs.parameters.output-dir}}/{{inputs.parameters.id}}/stringtie_transcripts.gtf"
      - name: gene_expression_tsv
        value: "{{inputs.parameters.output-dir}}/{{inputs.parameters.id}}/stringtie_gene_expression.tsv"
#####################
  - name: gen-qc-metrics
    inputs:
      parameters:
      - name: "cpu"
      - name: "mem"
      - name: threads
      - name: pvc-name
      - name: id
      - name: bam-file
      - name: output-dir
      - name: strand
      - name: refFlat
      - name: ribsomal-ints
    podSpecPatch: '{"containers":[{"name":"main", "resources":{"requests":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }, "limits":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }}}]}'
    volumes:
      - name: '{{inputs.parameters.pvc-name}}'
        persistentVolumeClaim:
          claimName: '{{inputs.parameters.pvc-name}}'
    container:
      image: docker.cancerdb.io/mgbio-workflow/qc-metrics:1.0.0
      env:
      - name: STRAND
        value: "{{inputs.parameters.strand}}"
      - name: OUTPUTDIR
        value: "{{inputs.parameters.output-dir}}"
      - name: ID
        value: "{{inputs.parameters.id}}"
      - name: REFFLAT
        value: "{{inputs.parameters.refFlat}}"
      - name: RIBOINTS
        value: "{{inputs.parameters.ribsomal-ints}}"
      - name: BAM
        value: "{{inputs.parameters.bam-file}}"
      command: ["/bin/bash", "/root/markduplicates_helper.sh"]
      imagePullPolicy: Always
      volumeMounts:
      - name: '{{inputs.parameters.pvc-name}}'
        mountPath: /data
      - name: pvc-reference
        mountPath: /ref-hg38
    outputs:
      parameters:
      - name: rna_metrics_txt
        value: "{{inputs.parameters.output-dir}}/{{inputs.parameters.id}}/rna_metrics.txt"
      - name: rna_metrics_pdf
        value: "{{inputs.parameters.output-dir}}/{{inputs.parameters.id}}/rna_metrics.pdf"
