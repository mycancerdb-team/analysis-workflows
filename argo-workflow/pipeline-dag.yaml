apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: mgbio-pipeline
spec:
  volumes:
    - name: pvc-reference
      persistentVolumeClaim:
        claimName: workflow-ref-hg38-dev
  imagePullSecrets:
    - name: mgbio-cred
    - name: mcdb-bot
  entrypoint: immuno-pipeline
  arguments:
    parameters:
    - name: id
    - name: ns
    - name: pvc
    - name: size
    - name: output-dir
    - name: s3-gen-dir
    - name: vault-name
    - name: rna-fastq-r1
    - name: rna-fastq-r2
    - name: normal-fastq-r1
    - name: normal-fastq-r2
    - name: cancer-fastq-r1
    - name: cancer-fastq-r2
    - name: normal-readGroup
    - name: cancer-readGroup
    - name: genome-reference
    - name: input-sort-order
    - name: strand
    - name: bqsr-intervals
    - name: known-indels
    - name: dbsnp-vcf
    - name: bait-intervals
    - name: target-intervals
    - name: per-base-intervals
    - name: per-target-intervals
    - name: summary-intervals
    - name: omni-vcf
    - name: picard-metric-accumulation-level
    - name: qc_minimum_mapping_quality
    - name: qc_minimum_base_quality
    - name: ref-flat
    - name: ribsomal-ints
    - name: rna-reference-annotation
    - name: gene-transcript-lookup-table
    - name: kallisto-index
    - name: hisat-index
    - name: trim-adapter-file
    - name: somalier-vcf
    - name: normal-sample-name
    - name: tumor-sample-name
    - name: scatter-count
    - name: docm-vcf
    - name: filter-docm-variants
    - name: exome-interval-list
    - name: sequence-platform-unit
    - name: sequence-platform
    - name: sequence-house
  onExit: exit-handler
  templates:
  - name: generate-pvc
    inputs:
      parameters:
      - name: id
      - name: ns
      - name: pvc
      - name: size
    resource:
      action: create
      #successCondition: status.phase = Bound
      #failureCondition: status.phase != Bound
      manifest: |
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: {{inputs.parameters.pvc}}-{{inputs.parameters.id}}
          namespace: {{inputs.parameters.ns}}
        spec:
          accessModes:
          - ReadWriteMany
          resources:
            requests:
              storage: {{inputs.parameters.size}}
          storageClassName: rook-cephfs
        ---
    outputs:
      parameters:
        - name: pvc-name
          valueFrom:
            jsonPath: '{.metadata.name}'
  - name: get-data
    inputs:
      parameters:
      - name: pvc-name
      - name: vault-name
      - name: s3-gen-dir
    volumes:
      - name: '{{inputs.parameters.pvc-name}}'
        persistentVolumeClaim:
          claimName: '{{inputs.parameters.pvc-name}}'
    container:
      image: docker.cancerdb.io/mcdb-bots/bootstrap:mgbio
      imagePullPolicy: Always
      volumeMounts:
      - name: '{{inputs.parameters.pvc-name}}'
        mountPath: /data
      env:
      - name: VAULT_ENDPOINT
        value: '{{inputs.parameters.vault-name}}'
      - name: GENOMIC_PATH
        value: '{{inputs.parameters.s3-gen-dir}}'
  - name: fastq-prep-bam
    inputs:
      parameters:
      - name: pvc-name
      - name: id
      - name: output-dir
      - name: "cpu"
      - name: "mem"
      - name: fastq1
      - name: fastq2
      - name: data-type #cancer-exome,somatic-exome,cancer-rna
      - name: platform-unit
      - name: platform
      - name: sequence-house
    podSpecPatch: '{"containers":[{"name":"main", "resources":{"requests":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }, "limits":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }}}]}'
    volumes:
      - name: '{{inputs.parameters.pvc-name}}'
        persistentVolumeClaim:
          claimName: '{{inputs.parameters.pvc-name}}'
    container:
      image: docker.cancerdb.io/mcdb-bots/fastq-bam:1.0.0
      imagePullPolicy: Always
      volumeMounts:
      - name: '{{inputs.parameters.pvc-name}}'
        mountPath: /data
      env:
      - name: FASTQR1
        value: '{{inputs.parameters.fastq1}}'
      - name: FASTQR2
        value: '{{inputs.parameters.fastq2}}'
      - name: OUTPUTDIR
        value: '{{inputs.parameters.output-dir}}'
      - name: DATATYPE
        value: '{{inputs.parameters.data-type}}'
      - name: SAMPLEID
        value: '{{inputs.parameters.id}}'
      - name: PLATFORMUNIT
        value: '{{inputs.parameters.platform-unit}}'
      - name: PLATFORM
        value: '{{inputs.parameters.platform}}'
      - name: SEQHOUSE
        value: '{{inputs.parameters.sequence-house}}'
    outputs:
      parameters:
        - name: fastq_bam
          value: "{{inputs.parameters.output-dir}}/samples/{{inputs.parameters.data-type}}/{{inputs.parameters.id}}-{{inputs.parameters.data-type}}.bam"
  - name: cleanup
    inputs:
      parameters:
      - name: vault-name
        value: "{{workflow.parameters.vault-name}}"
      - name: pvc
        value: "{{workflow.parameters.pvc}}"
      - name: id
        value: "{{workflow.parameters.id}}"
    volumes:
      - name: "{{inputs.parameters.pvc}}-{{inputs.parameters.id}}"
        persistentVolumeClaim:
          claimName: "{{inputs.parameters.pvc}}-{{inputs.parameters.id}}"
    container:
      image: docker.cancerdb.io/mcdb-bots/wrkflw-cleanup:mgbio
      imagePullPolicy: Always
      volumeMounts:
      - name: "{{inputs.parameters.pvc}}-{{inputs.parameters.id}}"
        mountPath: /data
      env:
      - name: VAULT_ENDPOINT
        value: '{{inputs.parameters.vault-name}}'
      - name: PATIENT_ID
        value: '{{inputs.parameters.id}}'
  - name: exit-handler
    steps:
    - - name: cleanup
        template: cleanup
  - name: immuno-pipeline
    dag:
      tasks:
      - name: generate-pvc-data
        template: generate-pvc
        arguments:
          parameters:
            - name: ns
              value: "{{workflow.parameters.ns}}"
            - name: pvc
              value: "{{workflow.parameters.pvc}}"
            - name: size
              value: "{{workflow.parameters.size}}"
            - name: id
              value: "{{workflow.parameters.id}}"
      - name: bootstrap-data
        template: get-data
        dependencies: [generate-pvc-data]
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: vault-name
              value: "{{workflow.parameters.vault-name}}"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: s3-gen-dir
              value: "{{workflow.parameters.s3-gen-dir}}"
      - name: fastq-bam-cancer
        template: fastq-prep-bam
        dependencies: [bootstrap-data]
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "10"
            - name: "mem"
              value: "10Gi"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: fastq1
              value: "{{workflow.parameters.cancer-fastq-r1}}"
            - name: fastq2
              value: "{{workflow.parameters.cancer-fastq-r2}}"
            - name: data-type
              value: tumor-exome
            - name: platform-unit
              value: "{{workflow.parameters.sequence-platform-unit}}"
            - name: platform
              value: "{{workflow.parameters.sequence-platform}}"
            - name: sequence-house
              value: "{{workflow.parameters.sequence-house}}"
      - name: fastq-bam-normal
        template: fastq-prep-bam
        dependencies: [bootstrap-data]
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "10"
            - name: "mem"
              value: "10Gi"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: fastq1
              value: "{{workflow.parameters.normal-fastq-r1}}"
            - name: fastq2
              value: "{{workflow.parameters.normal-fastq-r2}}"
            - name: data-type
              value: normal-exome
            - name: platform-unit
              value: "{{workflow.parameters.sequence-platform-unit}}"
            - name: platform
              value: "{{workflow.parameters.sequence-platform}}"
            - name: sequence-house
              value: "{{workflow.parameters.sequence-house}}"
      - name: fastq-bam-rna
        template: fastq-prep-bam
        dependencies: [bootstrap-data]
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "10"
            - name: "mem"
              value: "10Gi"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: fastq1
              value: "{{workflow.parameters.rna-fastq-r1}}"
            - name: fastq2
              value: "{{workflow.parameters.rna-fastq-r2}}"
            - name: data-type
              value: cancer-rna
            - name: platform-unit
              value: "{{workflow.parameters.sequence-platform-unit}}"
            - name: platform
              value: "{{workflow.parameters.sequence-platform}}"
            - name: sequence-house
              value: "{{workflow.parameters.sequence-house}}"
##Begin RNA-Seq Steps
      - name: rnaq-seq-bam-to-fastq
        dependencies: [fastq-bam-rna]
        templateRef:
          name: immuno-rnaseq-workflow
          template: bam-to-fastq
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "8"
            - name: "mem"
              value: "20Gi"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: rna
            - name: bam-file
              value: "{{tasks.fastq-bam-rna.outputs.parameters.fastq_bam}}"
      - name: rna-seq-trim-reads
        dependencies: [rnaq-seq-bam-to-fastq]
        templateRef:
          name: immuno-rnaseq-workflow
          template: trim-reads
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "8"
            - name: "mem"
              value: "20Gi"
            - name: threads
              value: 8
            - name: data-type
              value: rna
            - name: trim-adapter-file
              value: "{{workflow.parameters.trim-adapter-file}}"
            - name: trim-adapter-end
              value: 'RIGHT'
            - name: trim-adapter-min-overlap
              value: 7
            - name: trim-max_uncalled
              value: 300
            - name: trim-min-readlength
              value: 25
            - name: rna-fastq-r1
              value: "{{tasks.rnaq-seq-bam-to-fastq.outputs.parameters.fastq1}}"
            - name: rna-fastq-r2
              value: "{{tasks.rnaq-seq-bam-to-fastq.outputs.parameters.fastq2}}"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
      - name: rna-seq-hisat2-align
        dependencies: [rna-seq-trim-reads]
        templateRef:
          name: immuno-rnaseq-workflow
          template: hisat2-align
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "28"
            - name: "mem"
              value: "90Gi"
            - name: threads
              value: 24
            - name: data-type
              value: rna
            - name: trimmed_fastq1
              value: "{{tasks.rna-seq-trim-reads.outputs.parameters.trimmed_fastq1}}"
            - name: trimmed_fastq2
              value: "{{tasks.rna-seq-trim-reads.outputs.parameters.trimmed_fastq2}}"
            - name: reference_index
              value: "{{workflow.parameters.hisat-index}}"
            - name: read_group_id
              value: "A" #unique-id
            - name: read_group_fields
              value: "{{workflow.parameters.rna-readGroup}}" ## coma seperated list
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: strand
              value: "{{workflow.parameters.strand}}"
      - name: rna-seq-kallisto
        dependencies: [rna-seq-hisat2-align]
        templateRef:
          name: immuno-rnaseq-workflow
          template: kallisto-run
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "16"
            - name: "mem"
              value: "64Gi"
            - name: threads
              value: 16
            - name: data-type
              value: rna
            - name: trimmed_fastq1
              value: "{{tasks.rna-seq-trim-reads.outputs.parameters.trimmed_fastq1}}"
            - name: trimmed_fastq2
              value: "{{tasks.rna-seq-trim-reads.outputs.parameters.trimmed_fastq2}}"
            - name: kallisto_index
              value: "{{workflow.parameters.kallisto-index}}"
            - name: strand
              value: "{{workflow.parameters.strand}}"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
      - name: rna-seq-transcript-gene
        dependencies: [rna-seq-kallisto]
        templateRef:
          name: immuno-rnaseq-workflow
          template: rna-transcript-to-gene
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "1"
            - name: "mem"
              value: "2Gi"
            - name: data-type
              value: rna
            - name: transcript_table_h5
              value: "{{tasks.rna-seq-kallisto.outputs.parameters.expression_transcript_h5}}"
            - name: gene_transcript_lookup_table
              value: "{{workflow.parameters.gene-transcript-lookup-table}}"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
      - name: rna-index-bam
        dependencies: [rna-seq-hisat2-align]
        templateRef:
          name: immuno-rnaseq-workflow
          template: index-bam
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "10"
            - name: "mem"
              value: "20Gi"
            - name: data-type
              value: rna
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: dir-name
              value: index_bam
            - name: bam-file
              value: "{{tasks.rna-seq-hisat2-align.outputs.parameters.aligned_bam}}"
      - name: rna-mark-duplicates
        dependencies: [rna-seq-hisat2-align]
        templateRef:
          name: immuno-rnaseq-workflow
          template: mark-dup
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "38"
            - name: "mem"
              value: "50Gi"
            - name: threads
              value: 10
            - name: data-type
              value: rna
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: bam-file
              value: "{{tasks.rna-seq-hisat2-align.outputs.parameters.aligned_bam}}"
            - name: input-sort-order
              value: "{{workflow.parameters.input-sort-order}}"
      - name: run-stringtie
        dependencies: [rna-mark-duplicates]
        templateRef:
          name: immuno-rnaseq-workflow
          template: stringtie
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "20"
            - name: "mem"
              value: "50Gi"
            - name: threads
              value: 20
            - name: data-type
              value: rna
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: bam-file
              value: "{{tasks.rna-mark-duplicates.outputs.parameters.marksorted_bam}}"
            - name: strand
              value: "{{workflow.parameters.strand}}"
            - name: reference-annotation
              value: "{{workflow.parameters.rna-reference-annotation}}"
      - name: rna-qc-metrics
        dependencies: [rna-index-bam]
        templateRef:
          name: immuno-rnaseq-workflow
          template: gen-qc-metrics
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "1"
            - name: "mem"
              value: "20Gi"
            - name: threads
              value: 1
            - name: data-type
              value: rna
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: strand
              value: "{{workflow.parameters.strand}}"
            - name: bam-file
              value: "{{tasks.rna-seq-hisat2-align.outputs.parameters.aligned_bam}}"
            - name: refFlat
              value: "{{workflow.parameters.ref-flat}}"
            - name: ribsomal-ints
              value: "{{workflow.parameters.ribsomal-ints}}"
##End RNA-Seq Steps

##Begin Somatic Steps
##dependencies: [fastq-bam-cancer,fastq-bam-normal]

### Modify BWA Alignment for BAM mode.
# BWA alignment
      - name: bwa-align-normal-exome
        dependencies: [fastq-bam-normal]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: bwa-align
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "25"
            - name: "mem"
              value: "30Gi"
            - name: threads
              value: 24
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: "normal"
            - name: bam-file
              value: "{{tasks.fastq-bam-normal.outputs.parameters.fastq_bam}}"
#            - name: exome-fastq-r1
#              value: "{{tasks.fastq-bam-normal.outputs.parameters.fastq1}}"
#            - name: exome-fastq-r2
#              value: "{{tasks.fastq-bam-normal.outputs.parameters.fastq2}}"
            - name: readGroup
              value: "{{workflow.parameters.normal-readGroup}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
      - name: bwa-align-cancer-exome
        dependencies: [fastq-bam-cancer]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: bwa-align
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "25"
            - name: "mem"
              value: "30Gi"
            - name: threads
              value: 24
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: "cancer"
            - name: bam-file
              value: "{{tasks.fastq-bam-cancer.outputs.parameters.fastq_bam}}"
#            - name: exome-fastq-r1
#              value: "{{tasks.fastq-bam-cancer.outputs.parameters.fastq1}}"
#            - name: exome-fastq-r2
#              value: "{{tasks.fastq-bam-cancer.outputs.parameters.fastq2}}"
            - name: readGroup
              value: "{{workflow.parameters.cancer-readGroup}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
#name sort
      - name: name-sort-normal-exome
        dependencies: [bwa-align-normal-exome]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: name-sort
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "20"
            - name: "mem"
              value: "32Gi"
            - name: threads
              value: 20
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: normal
            - name: bam-file
              value: "{{tasks.bwa-align-normal-exome.outputs.parameters.aligned_bam}}"
      - name: name-sort-cancer-exome
        dependencies: [bwa-align-cancer-exome]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: name-sort
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "20"
            - name: "mem"
              value: "32Gi"
            - name: threads
              value: 20
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: cancer
            - name: bam-file
              value: "{{tasks.bwa-align-cancer-exome.outputs.parameters.aligned_bam}}"
##mark_dups
      - name: normal-exome-mark-dups
        dependencies: [name-sort-normal-exome]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: mark-dup
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "38"
            - name: "mem"
              value: "50Gi"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: threads
              value: 10
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: normal
            - name: bam-file
              value: "{{tasks.name-sort-normal-exome.outputs.parameters.name_sorted_bam}}"
            - name: input-sort-order
              value: "queryname"
      - name: cancer-exome-mark-dups
        dependencies: [name-sort-cancer-exome]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: mark-dup
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "38"
            - name: "mem"
              value: "50Gi"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: threads
              value: 10
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: cancer
            - name: bam-file
              value: "{{tasks.name-sort-cancer-exome.outputs.parameters.name_sorted_bam}}"
            - name: input-sort-order
              value: "queryname"
####bqsr
      - name: normal-exome-bqsr
        dependencies: [normal-exome-mark-dups]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: bqsr
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: normal
            - name: bam-file
              value: "{{tasks.normal-exome-mark-dups.outputs.parameters.marksorted_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: bqsr-intervals
              value: "{{workflow.parameters.bqsr-intervals}}"
            - name: known-indels
              value: "{{workflow.parameters.known-indels}}"
            - name: dbsnp-vcf
              value: "{{workflow.parameters.dbsnp-vcf}}"
      - name: cancer-exome-bqsr
        dependencies: [cancer-exome-mark-dups]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: bqsr
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: cancer
            - name: bam-file
              value: "{{tasks.cancer-exome-mark-dups.outputs.parameters.marksorted_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: bqsr-intervals
              value: "{{workflow.parameters.bqsr-intervals}}"
            - name: known-indels
              value: "{{workflow.parameters.known-indels}}"
            - name: dbsnp-vcf
              value: "{{workflow.parameters.dbsnp-vcf}}"
###apply_bqsr
      - name: normal-exome-apply-bqsr
        dependencies: [normal-exome-bqsr]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: apply-bqsr
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: normal
            - name: bam-file
              value: "{{tasks.normal-exome-mark-dups.outputs.parameters.marksorted_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: bqsr-table
              value: "{{tasks.normal-exome-bqsr.outputs.parameters.bqsr_table}}"
      - name: cancer-exome-apply-bqsr
        dependencies: [cancer-exome-bqsr]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: apply-bqsr
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: cancer
            - name: bam-file
              value: "{{tasks.cancer-exome-mark-dups.outputs.parameters.marksorted_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: bqsr-table
              value: "{{tasks.cancer-exome-bqsr.outputs.parameters.bqsr_table}}"
###index_bam
      - name: normal-index-bam
        dependencies: [normal-exome-apply-bqsr]
        templateRef:
          name: immuno-rnaseq-workflow
          template: index-bam
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: normal
            - name: dir-name
              value: final
            - name: bam-file
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
      - name: cancer-index-bam
        dependencies: [cancer-exome-apply-bqsr]
        templateRef:
          name: immuno-rnaseq-workflow
          template: index-bam
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: cancer
            - name: dir-name
              value: final
            - name: bam-file
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
#### QC_Exome
      - name: normal-collect-insert-size-metrics
        dependencies: [normal-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: insert-size-metrics
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: normal
            - name: bam-file
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: metric-accumulation-level
              value: "{{workflow.parameters.picard-metric-accumulation-level}}"
      - name: cancer-collect-insert-size-metrics
        dependencies: [cancer-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: insert-size-metrics
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: cancer
            - name: bam-file
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: metric-accumulation-level
              value: "{{workflow.parameters.picard-metric-accumulation-level}}"
      - name: normal-collect-alignment-summary-metrics
        dependencies: [normal-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: align-summary-metrics
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: normal
            - name: bam-file
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: metric-accumulation-level
              value: "{{workflow.parameters.picard-metric-accumulation-level}}"
      - name: cancer-collect-alignment-summary-metrics
        dependencies: [cancer-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: align-summary-metrics
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: cancer
            - name: bam-file
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: metric-accumulation-level
              value: "{{workflow.parameters.picard-metric-accumulation-level}}"
###HSMetrics roi
      - name: normal-collect-roi-hs-metrics
        dependencies: [normal-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: collect-hs-metrics
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: normal
            - name: bam-file
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: metric-accumulation-level
              value: "ALL_READS"
            - name: bait-intervals
              value: "{{workflow.parameters.bait-intervals}}"
            - name: target-intervals
              value: "{{workflow.parameters.target-intervals}}"
            - name: per_target_coverage
              value: false
            - name: per_base_coverage
              value: false
            - name: output_prefix
              value: "roi"
            - name: minimum_mapping_quality
              value: "{{workflow.parameters.qc_minimum_mapping_quality}}"
            - name: minimum_base_quality
              value: "{{workflow.parameters.qc_minimum_base_quality}}"
      - name: cancer-collect-roi-hs-metrics
        dependencies: [cancer-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: collect-hs-metrics
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: cancer
            - name: bam-file
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: metric-accumulation-level
              value: "ALL_READS"
            - name: bait-intervals
              value: "{{workflow.parameters.bait-intervals}}"
            - name: target-intervals
              value: "{{workflow.parameters.target-intervals}}"
            - name: per_target_coverage
              value: false
            - name: per_base_coverage
              value: false
            - name: output_prefix
              value: "roi"
            - name: minimum_mapping_quality
              value: "{{workflow.parameters.qc_minimum_mapping_quality}}"
            - name: minimum_base_quality
              value: "{{workflow.parameters.qc_minimum_base_quality}}"
##DetailedHSMetrics
      - name: normal-collect-summary-hs-metrics
        dependencies: [normal-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: collect-hs-metrics
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: normal
            - name: bam-file
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: metric-accumulation-level
              value: "ALL_READS"
            - name: bait-intervals
              value: "{{workflow.parameters.bait-intervals}}"
            - name: target-intervals
              value: "{{workflow.parameters.target-intervals}}"
            - name: per_target_coverage
              value: false
            - name: per_base_coverage
              value: false
            - name: output_prefix
              value: "summary"
            - name: minimum_mapping_quality
              value: "{{workflow.parameters.qc_minimum_mapping_quality}}"
            - name: minimum_base_quality
              value: "{{workflow.parameters.qc_minimum_base_quality}}"
      - name: cancer-collect-summary-hs-metrics
        dependencies: [cancer-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: collect-hs-metrics
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: cancer
            - name: bam-file
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: metric-accumulation-level
              value: "ALL_READS"
            - name: bait-intervals
              value: "{{workflow.parameters.bait-intervals}}"
            - name: target-intervals
              value: "{{workflow.parameters.target-intervals}}"
            - name: per_target_coverage
              value: false
            - name: per_base_coverage
              value: false
            - name: output_prefix
              value: "summary"
            - name: minimum_mapping_quality
              value: "{{workflow.parameters.qc_minimum_mapping_quality}}"
            - name: minimum_base_quality
              value: "{{workflow.parameters.qc_minimum_base_quality}}"
## PerBase Metrics
      - name: normal-collect-base-hs-metrics
        dependencies: [normal-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: collect-hs-metrics
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: normal
            - name: bam-file
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: metric-accumulation-level
              value: "ALL_READS"
            - name: bait-intervals
              value: "{{workflow.parameters.bait-intervals}}"
            - name: target-intervals
              value: "{{workflow.parameters.target-intervals}}"
            - name: per_target_coverage
              value: false
            - name: per_base_coverage
              value: true
            - name: output_prefix
              value: "base"
            - name: minimum_mapping_quality
              value: "{{workflow.parameters.qc_minimum_mapping_quality}}"
            - name: minimum_base_quality
              value: "{{workflow.parameters.qc_minimum_base_quality}}"
      - name: cancer-collect-base-hs-metrics
        dependencies: [cancer-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: collect-hs-metrics
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: cancer
            - name: bam-file
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: metric-accumulation-level
              value: "ALL_READS"
            - name: bait-intervals
              value: "{{workflow.parameters.bait-intervals}}"
            - name: target-intervals
              value: "{{workflow.parameters.target-intervals}}"
            - name: per_target_coverage
              value: false
            - name: per_base_coverage
              value: true
            - name: output_prefix
              value: "base"
            - name: minimum_mapping_quality
              value: "{{workflow.parameters.qc_minimum_mapping_quality}}"
            - name: minimum_base_quality
              value: "{{workflow.parameters.qc_minimum_base_quality}}"
## Per Target Metrics
      - name: normal-collect-target-hs-metrics
        dependencies: [normal-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: collect-hs-metrics
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: normal
            - name: bam-file
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: metric-accumulation-level
              value: "ALL_READS"
            - name: bait-intervals
              value: "{{workflow.parameters.bait-intervals}}"
            - name: target-intervals
              value: "{{workflow.parameters.target-intervals}}"
            - name: per_target_coverage
              value: true
            - name: per_base_coverage
              value: false
            - name: output_prefix
              value: "target"
            - name: minimum_mapping_quality
              value: "{{workflow.parameters.qc_minimum_mapping_quality}}"
            - name: minimum_base_quality
              value: "{{workflow.parameters.qc_minimum_base_quality}}"
      - name: cancer-collect-target-hs-metrics
        dependencies: [cancer-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: collect-hs-metrics
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: cancer
            - name: bam-file
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: metric-accumulation-level
              value: "ALL_READS"
            - name: bait-intervals
              value: "{{workflow.parameters.bait-intervals}}"
            - name: target-intervals
              value: "{{workflow.parameters.target-intervals}}"
            - name: per_target_coverage
              value: true
            - name: per_base_coverage
              value: false
            - name: output_prefix
              value: "target"
            - name: minimum_mapping_quality
              value: "{{workflow.parameters.qc_minimum_mapping_quality}}"
            - name: minimum_base_quality
              value: "{{workflow.parameters.qc_minimum_base_quality}}"
#samtools flagstat
      - name: normal-samtools-flagstat
        dependencies: [normal-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: samtools-flagstat
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: normal
            - name: bam-file
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
      - name: cancer-samtools-flagstat
        dependencies: [cancer-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: samtools-flagstat
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: cancer
            - name: bam-file
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
#select_vars
      - name: select-variants
        dependencies: [bootstrap-data]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: select-variants
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "select_variants"
            - name: filename
              value: "selected_variants"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: vcf-ref
              value: "{{workflow.parameters.omni-vcf}}"
            - name: target-intervals
              value: "{{workflow.parameters.target-intervals}}"
#verify_bam
      - name: normal-verify-bam
        dependencies: [select-variants,normal-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: verify-bamid
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: normal
            - name: bam-file
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: vcf-ref
              value: "{{tasks.select-variants.outputs.parameters.filtered_vcf}}"
      - name: cancer-verify-bam
        dependencies: [select-variants,cancer-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: verify-bamid
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: cancer
            - name: bam-file
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: vcf-ref
              value: "{{tasks.select-variants.outputs.parameters.filtered_vcf}}"
####Concordance
      - name: concordance
        dependencies: [cancer-index-bam,normal-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: concordance
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: cancer-bam
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: normal-bam
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: vcf-ref
              value: "{{workflow.parameters.somalier-vcf}}"
##cnv-kit
      - name: cnv-kit
        dependencies: [cancer-index-bam,normal-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: cnv-kit
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "2"
            - name: "mem"
              value: "4Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: cancer-bam
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: normal-bam
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: bait-intervals
              value: "{{workflow.parameters.bait-intervals}}"
            - name: id
              value: "{{workflow.parameters.id}}"
##manta
      - name: manta-somatic
        dependencies: [cancer-index-bam,normal-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: manta-somatic
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "24Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: cancer-bam
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: normal-bam
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            #- name: call-regions
            #  value: ""
            #- name: output-contigs
            #  value: ""
            #- name: id
            #  value: "{{workflow.parameters.id}}"
##tumor_bam-to-cram
      - name: tumor-bam-to-cram
        dependencies: [cancer-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: bam-to-cram
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "2"
            - name: "mem"
              value: "4Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "cancer"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: bam
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: id
              value: "{{workflow.parameters.id}}"
##index-tumor-bam-to-cram
      - name: index-tumor-cram
        dependencies: [tumor-bam-to-cram]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: index-cram
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "2"
            - name: "mem"
              value: "4Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: cram
              value: "{{tasks.tumor-bam-to-cram.outputs.parameters.crammed-bam}}"
##normal_bam-to-cram
      - name: normal-bam-to-cram
        dependencies: [normal-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: bam-to-cram
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "2"
            - name: "mem"
              value: "4Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "normal"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: bam
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: id
              value: "{{workflow.parameters.id}}"
##index-normal-bam-to-cram
      - name: index-normal-cram
        dependencies: [normal-bam-to-cram]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: index-cram
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "2"
            - name: "mem"
              value: "4Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: cram
              value: "{{tasks.normal-bam-to-cram.outputs.parameters.crammed-bam}}"
### BEGIN DETECT VARIANTS
#dependencies: [normal-index-bam,cancer-index-bam]
##MUTECT BLOCK
      - name: mutect-split-interval-list
        dependencies: [normal-index-bam,cancer-index-bam]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: split-interval-list
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: interval-list
              value: "{{workflow.parameters.exome-interval-list}}"
            - name: scatter-count
              value: "{{workflow.parameters.scatter-count}}"
            - name: service
              value: "mutect"
      - name: mutect-workflow
        dependencies: [mutect-split-interval-list]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: mutect-workflow
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "20"
            - name: "mem"
              value: "100Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: scatter-count
              value: "{{workflow.parameters.scatter-count}}"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: cancer-bam
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: normal-bam
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
      - name: mutect-merge
        dependencies: [mutect-workflow]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: mutect-merge
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: id
              value: "{{workflow.parameters.id}}"
      - name: mutect-index-vcf
        dependencies: [mutect-merge]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: index-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "mutect"
            - name: data-type
              value: 0 #this is used to prevent subdir creation. Accepts string values.
            - name: vcf
              value: "{{tasks.mutect-merge.outputs.parameters.mutect-merged-vcf}}"
### Mutect // FP-Filter steps
## Sanitize vcf FP-Filter steps
      - name: sanitize-mutect-vcf
        dependencies: [mutect-index-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: vcf-sanitize
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "10Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "mutect"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: vcf
              value: "{{tasks.mutect-merge.outputs.parameters.mutect-merged-vcf}}"
## normalize Vars FP-Filter steps
      - name: normalize-mutect-vcf
        dependencies: [sanitize-mutect-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: normalize-vars
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "10Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: service
              value: "mutect"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: vcf
              value: "{{tasks.sanitize-mutect-vcf.outputs.parameters.sani_vcf_gz}}"
## decompose vars
      - name: mutect-decompose
        dependencies: [normalize-mutect-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: docm-vt-compose
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.normalize-mutect-vcf.outputs.parameters.normalized_vcf}}"
            - name: service
              value: "mutect"
            - name: id
              value: "{{workflow.parameters.id}}"
## index decomposed_vcf
      - name: mutect-index-decom-vcf
        dependencies: [mutect-decompose]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: index-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "mutect"
            - name: data-type
              value: "decom" #this is used to prevent subdir creation. Accepts string values.
            - name: vcf
              value: "{{tasks.mutect-decompose.outputs.parameters.decomposed_vcf}}"
## Apply FP Filter
      - name: mutect-fp-filter
        dependencies: [mutect-index-decom-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: fp-filter
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: service
              value: "mutect"
            - name: vcf
              value: "{{tasks.mutect-decompose.outputs.parameters.decomposed_vcf}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: cancer-bam
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: sample-name
              value: "{{workflow.parameters.tumor-sample-name}}"
## BgZip FP
      - name: bgzip-mutect-fpfilter
        dependencies: [mutect-fp-filter]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: bgzip
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: input-file
              value: "{{tasks.mutect-fp-filter.outputs.parameters.filtered_vcf}}"
## Index FP //output=unfiltered_vcf
      - name: mutect-index-fp-vcf
        dependencies: [bgzip-mutect-fpfilter]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: index-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "mutect"
            - name: data-type
              value: "fpfilter"
            - name: vcf
              value: "{{tasks.bgzip-mutect-fpfilter.outputs.parameters.bgzipped_output}}"
## hard-filter // output=filtered_vcf
      - name: mutect-hard-filter
        dependencies: [mutect-index-fp-vcf]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: fp-filter-select-variants
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "mutect"
            - name: filename
              value: "final_filter"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: vcf-ref
              value: "{{tasks.bgzip-mutect-fpfilter.outputs.parameters.bgzipped_output}}"
            - name: target-intervals
              value: "{{workflow.parameters.target-intervals}}"
###END Mutect // FP-Filter steps
## END MUTECT BLOCK

## BEGIN STRELKA BLOCK
      - name: strelka-workflow
        dependencies: [normal-index-bam,cancer-index-bam]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: strelka-run
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "8"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: threads
              value: 8
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: cancer-bam
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: normal-bam
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
      - name: strelka-add-gt-snvs
        dependencies: [strelka-workflow]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: strelka-add-gt
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.strelka-workflow.outputs.parameters.snvs}}"
            - name: data-type
              value: snv
      - name: strelka-add-gt-indels
        dependencies: [strelka-workflow]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: strelka-add-gt
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.strelka-workflow.outputs.parameters.indels}}"
            - name: data-type
              value: indels
      - name: bgzip-strelka-gt-snvs
        dependencies: [strelka-add-gt-snvs]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: bgzip
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: input-file
              value: "{{tasks.strelka-add-gt-snvs.outputs.parameters.gt_vcf}}"
      - name: bgzip-strelka-gt-indels
        dependencies: [strelka-add-gt-indels]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: bgzip
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: input-file
              value: "{{tasks.strelka-add-gt-indels.outputs.parameters.gt_vcf}}"
      - name: index-strelka-snvs
        dependencies: [bgzip-strelka-gt-snvs]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: index-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "strelka"
            - name: data-type
              value: snv
            - name: vcf
              value: "{{tasks.bgzip-strelka-gt-snvs.outputs.parameters.bgzipped_output}}"
      - name: index-strelka-indels
        dependencies: [bgzip-strelka-gt-indels]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: index-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "strelka"
            - name: data-type
              value: indels
            - name: vcf
              value: "{{tasks.bgzip-strelka-gt-indels.outputs.parameters.bgzipped_output}}"
      - name: merge-strelka-vcfs
        dependencies: [index-strelka-indels,index-strelka-snvs]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: merge-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "strelka"
            - name: vcf1
              value: "{{tasks.bgzip-strelka-gt-snvs.outputs.parameters.bgzipped_output}}"
            - name: vcf2
              value: "{{tasks.bgzip-strelka-gt-indels.outputs.parameters.bgzipped_output}}"
            - name: id
              value: "{{workflow.parameters.id}}"
      - name: strelka-rename-cancer
        dependencies: [merge-strelka-vcfs]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: rename-sample
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.merge-strelka-vcfs.outputs.parameters.merged-vcf}}"
            - name: sample-to-replace
              value: 'TUMOR'
            - name: sample-new-name
              value: "{{workflow.parameters.tumor-sample-name}}"
            - name: service
              value: "strelka"
            - name: id
              value: "{{workflow.parameters.id}}"
      - name: strelka-rename-normal
        dependencies: [strelka-rename-cancer]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: rename-sample
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.strelka-rename-cancer.outputs.parameters.renamed_vcf}}"
            - name: sample-to-replace
              value: 'NORMAL'
            - name: sample-new-name
              value: "{{workflow.parameters.normal-sample-name}}"
            - name: service
              value: "strelka"
            - name: id
              value: "{{workflow.parameters.id}}"
      - name: index-strelka-vcf
        dependencies: [strelka-rename-normal]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: index-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "strelka"
            - name: data-type
              value: rename
            - name: vcf
              value: "{{tasks.strelka-rename-normal.outputs.parameters.renamed_vcf}}"
      - name: strelka-region-filter
        dependencies: [index-strelka-vcf]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: select-variants
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "strelka"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: filename
              value: "regfilter_{{workflow.parameters.id}}"
            - name: vcf-ref
              value: "{{tasks.strelka-rename-normal.outputs.parameters.renamed_vcf}}"
            - name: target-intervals
              value: "{{workflow.parameters.target-intervals}}"
## Fp filter workflow
## Input tasks.strelka-region-filter.outputs.parameters.filtered_vcf
### Strelka // FP-Filter steps
## Sanitize vcf FP-Filter steps
      - name: sanitize-strelka-vcf
        dependencies: [strelka-region-filter]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: vcf-sanitize
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "10Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "strelka"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: vcf
              value: "{{tasks.strelka-region-filter.outputs.parameters.filtered_vcf}}"
## normalize Vars FP-Filter steps
      - name: normalize-strelka-vcf
        dependencies: [sanitize-strelka-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: normalize-vars
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "10Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: service
              value: "strelka"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: vcf
              value: "{{tasks.sanitize-strelka-vcf.outputs.parameters.sani_vcf_gz}}"
## decompose vars
      - name: strelka-decompose
        dependencies: [normalize-strelka-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: docm-vt-compose
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.normalize-strelka-vcf.outputs.parameters.normalized_vcf}}"
            - name: service
              value: "strelka"
            - name: id
              value: "{{workflow.parameters.id}}"
## index decomposed_vcf
      - name: strelka-index-decom-vcf
        dependencies: [strelka-decompose]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: index-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "strelka"
            - name: data-type
              value: "decom" #this is used to prevent subdir creation. Accepts string values.
            - name: vcf
              value: "{{tasks.strelka-decompose.outputs.parameters.decomposed_vcf}}"
## Apply FP Filter
      - name: strelka-fp-filter
        dependencies: [strelka-index-decom-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: fp-filter
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: service
              value: "strelka"
            - name: vcf
              value: "{{tasks.strelka-decompose.outputs.parameters.decomposed_vcf}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: cancer-bam
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: sample-name
              value: "{{workflow.parameters.tumor-sample-name}}"
## BgZip FP
      - name: bgzip-strelka-fpfilter
        dependencies: [strelka-fp-filter]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: bgzip
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: input-file
              value: "{{tasks.strelka-fp-filter.outputs.parameters.filtered_vcf}}"
## Index FP //output=unfiltered_vcf
      - name: strelka-index-fp-vcf
        dependencies: [bgzip-strelka-fpfilter]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: index-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "strelka"
            - name: data-type
              value: "fpfilter"
            - name: vcf
              value: "{{tasks.bgzip-strelka-fpfilter.outputs.parameters.bgzipped_output}}"
## hard-filter // output=filtered_vcf
      - name: strelka-hard-filter
        dependencies: [strelka-index-fp-vcf]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: fp-filter-select-variants
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "strelka"
            - name: filename
              value: "final_filter"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: vcf-ref
              value: "{{tasks.bgzip-strelka-fpfilter.outputs.parameters.bgzipped_output}}"
            - name: target-intervals
              value: "{{workflow.parameters.target-intervals}}"
###END Strelka // FP-Filter steps
### End Strelka Block

## Begin Varscan Block
      - name: varscan-int-to-bed
        dependencies: [normal-index-bam,cancer-index-bam]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: intervals-to-bed
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "varscan"
            - name: interval-list
              value: "{{workflow.parameters.target-intervals}}"
      - name: varscan-workflow
        dependencies: [varscan-int-to-bed]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: varscan-workflow
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: cancer-bam
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: normal-bam
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: strand-filter
              value: 0
            - name: min-coverage
              value: 8
            - name: min-var-freq
              value: 0.05
            - name: p-value
              value: 0.99
            - name: roi-bed
              value: "{{tasks.varscan-int-to-bed.outputs.parameters.interval_bed}}"
      - name: varscan-process-snp
        dependencies: [varscan-workflow]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: varscan-process
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            #- name: max-normal-freq
            #  value: 0.05
            - name: data-type
              value: "snp"
            - name: vcf
              value: "{{tasks.varscan-workflow.outputs.parameters.snps}}"
      - name: varscan-process-indels
        dependencies: [varscan-workflow]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: varscan-process
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            #- name: max-normal-freq
            #  value: 0.05
            - name: data-type
              value: "indel"
            - name: vcf
              value: "{{tasks.varscan-workflow.outputs.parameters.indels}}"
## BgZip and index SNVs and Indels
      - name: varscan-bgzip-index-vars
        dependencies: [varscan-process-snp,varscan-process-indels]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: varscan-post-process
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: snv-vcf
              value: "{{tasks.varscan-process-snp.outputs.parameters.somatic}}"
            - name: indels-vcf
              value: "{{tasks.varscan-process-indels.outputs.parameters.somatic}}"
            - name: hc-snv-vcf
              value: "{{tasks.varscan-process-snp.outputs.parameters.somatic_hc}}"
            - name: hc-indels-vcf
              value: "{{tasks.varscan-process-indels.outputs.parameters.somatic_hc}}"
      - name: merge-varscan-snps
        dependencies: [varscan-bgzip-index-vars]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: variant-filtration
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "varscan/snv"
            - name: vcf
              value: "{{tasks.varscan-bgzip-index-vars.outputs.parameters.indexed_snvs}}"
            - name: filtered-vcf
              value: "{{tasks.varscan-bgzip-index-vars.outputs.parameters.indexed_hc_snvs}}"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
      - name: merge-varscan-indels
        dependencies: [varscan-bgzip-index-vars]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: variant-filtration
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "varscan/indels"
            - name: vcf
              value: "{{tasks.varscan-bgzip-index-vars.outputs.parameters.indexed_indels}}"
            - name: filtered-vcf
              value: "{{tasks.varscan-bgzip-index-vars.outputs.parameters.indexed_hc_indels}}"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
      - name: varscan-index-snp
        dependencies: [merge-varscan-snps]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: index-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "varscan"
            - name: data-type
              value: snv #this is used to prevent subdir creation. Accepts string values.
            - name: vcf
              value: "{{tasks.merge-varscan-snps.outputs.parameters.merged-filter-vcf}}"
      - name: varscan-index-indels
        dependencies: [merge-varscan-indels]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: index-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "varscan"
            - name: data-type
              value: indels
            - name: vcf
              value: "{{tasks.merge-varscan-indels.outputs.parameters.merged-filter-vcf}}"
      - name: varscan-merge-all
        dependencies: [varscan-index-indels,varscan-index-snp]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: merge-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "varscan"
            - name: vcf1
              value: "{{tasks.merge-varscan-indels.outputs.parameters.merged-filter-vcf}}"
            - name: vcf2
              value: "{{tasks.merge-varscan-snps.outputs.parameters.merged-filter-vcf}}"
            - name: id
              value: "{{workflow.parameters.id}}"
      - name: varscan-rename-cancer
        dependencies: [varscan-merge-all]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: rename-sample
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "varscan"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: vcf
              value: "{{tasks.varscan-merge-all.outputs.parameters.merged-vcf}}"
            - name: sample-to-replace
              value: 'TUMOR'
            - name: sample-new-name
              value: "{{workflow.parameters.tumor-sample-name}}"
      - name: varscan-rename-normal
        dependencies: [varscan-rename-cancer]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: rename-sample
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "varscan"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: vcf
              value: "{{tasks.varscan-rename-cancer.outputs.parameters.renamed_vcf}}"
            - name: sample-to-replace
              value: 'NORMAL'
            - name: sample-new-name
              value: "{{workflow.parameters.normal-sample-name}}"
      - name: varscan-index-renamed
        dependencies: [varscan-rename-normal]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: index-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "varscan"
            - name: data-type
              value: rename
            - name: vcf
              value: "{{tasks.varscan-rename-normal.outputs.parameters.renamed_vcf}}"
## Fp filter workflow
## Input tasks.varscan-index-renamed.outputs.parameters.vcf-index
### Strelka // FP-Filter steps
## Sanitize vcf FP-Filter steps
      - name: sanitize-varscan-vcf
        dependencies: [varscan-index-renamed]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: vcf-sanitize
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "10Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "varscan"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: vcf
              value: "{{tasks.varscan-rename-normal.outputs.parameters.renamed_vcf}}"
## normalize Vars FP-Filter steps
      - name: normalize-varscan-vcf
        dependencies: [sanitize-varscan-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: normalize-vars
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "10Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: service
              value: "varscan"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: vcf
              value: "{{tasks.sanitize-varscan-vcf.outputs.parameters.sani_vcf_gz}}"
## decompose vars
      - name: varscan-decompose
        dependencies: [normalize-varscan-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: docm-vt-compose
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.normalize-varscan-vcf.outputs.parameters.normalized_vcf}}"
            - name: service
              value: "varscan"
            - name: id
              value: "{{workflow.parameters.id}}"
## index decomposed_vcf
      - name: varscan-index-decom-vcf
        dependencies: [varscan-decompose]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: index-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "varscan"
            - name: data-type
              value: "decom" #this is used to prevent subdir creation. Accepts string values.
            - name: vcf
              value: "{{tasks.varscan-decompose.outputs.parameters.decomposed_vcf}}"
## Apply FP Filter
      - name: varscan-fp-filter
        dependencies: [varscan-index-decom-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: fp-filter
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: service
              value: "varscan"
            - name: vcf
              value: "{{tasks.varscan-decompose.outputs.parameters.decomposed_vcf}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: cancer-bam
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: sample-name
              value: "{{workflow.parameters.tumor-sample-name}}"
## BgZip FP
      - name: bgzip-varscan-fpfilter
        dependencies: [varscan-fp-filter]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: bgzip
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: input-file
              value: "{{tasks.varscan-fp-filter.outputs.parameters.filtered_vcf}}"
## Index FP //output=unfiltered_vcf
      - name: varscan-index-fp-vcf
        dependencies: [bgzip-varscan-fpfilter]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: index-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "varscan"
            - name: data-type
              value: "fpfilter"
            - name: vcf
              value: "{{tasks.bgzip-varscan-fpfilter.outputs.parameters.bgzipped_output}}"
## hard-filter // output=filtered_vcf
      - name: varscan-hard-filter
        dependencies: [varscan-index-fp-vcf]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: fp-filter-select-variants
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "varscan"
            - name: filename
              value: "final_filter"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: vcf-ref
              value: "{{tasks.bgzip-varscan-fpfilter.outputs.parameters.bgzipped_output}}"
            - name: target-intervals
              value: "{{workflow.parameters.target-intervals}}"
###END Varscan // FP-Filter steps
## End Varscan Block

## Begin Pindel Block
      - name: pindel-split-interval-list-to-bed
        dependencies: [normal-index-bam,cancer-index-bam]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: split-interval-list-to-bed
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: interval-list
              value: "{{workflow.parameters.exome-interval-list}}"
            - name: scatter-count
              value: "{{workflow.parameters.scatter-count}}"
            - name: service
              value: "pindel"
      ## Pindel Scatter split list
      - name: pindel-split-list
        dependencies: [pindel-split-interval-list-to-bed]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: pindel-split-list
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "2"
            - name: "mem"
              value: "2Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
      ########
      - name: pindel-workflow
        dependencies: [pindel-split-list]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: pindel-workflow
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "64"
            - name: "mem"
              value: "80Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: cancer-bam
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: normal-bam
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: insert-size
              value: 400
            - name: normal-sample-name
              value: "{{workflow.parameters.normal-sample-name}}"
            - name: cancer-sample-name
              value: "{{workflow.parameters.tumor-sample-name}}"
            - name: chromosome
              value: "ALL"
            - name: scatter-list
              value: "{{tasks.pindel-split-list.outputs.parameters.head_list}}"
      - name: pindel-workflow-2
        dependencies: [pindel-split-list]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: pindel-workflow
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "64"
            - name: "mem"
              value: "80Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: cancer-bam
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: normal-bam
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: insert-size
              value: 400
            - name: normal-sample-name
              value: "{{workflow.parameters.normal-sample-name}}"
            - name: cancer-sample-name
              value: "{{workflow.parameters.tumor-sample-name}}"
            - name: chromosome
              value: "ALL"
            - name: scatter-list
              value: "{{tasks.pindel-split-list.outputs.parameters.tail_list}}"
      ## Pindel cat-all
      - name: pindel-cat-all
        dependencies: [pindel-workflow,pindel-workflow-2]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: pindel-cat-all
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "2"
            - name: "mem"
              value: "2Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: scatter-list
              value: "{{tasks.pindel-split-list.outputs.parameters.full_list}}"
      ##############
      - name: pindel-somatic-filter
        dependencies: [pindel-cat-all]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: pindel-somatic-filter
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "pindel"
            - name: pindel-file
              value: "{{tasks.pindel-cat-all.outputs.parameters.pindel_head}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
      - name: bgzip-pindel-vcf
        dependencies: [pindel-somatic-filter]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: bgzip
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: input-file
              value: "{{tasks.pindel-somatic-filter.outputs.parameters.pindel_vcf}}"
      - name: pindel-index-vcf
        dependencies: [bgzip-pindel-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: index-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "pindel"
            - name: data-type
              value: 0 #this is used to prevent subdir creation. Accepts string values.
            - name: vcf
              value: "{{tasks.bgzip-pindel-vcf.outputs.parameters.bgzipped_output}}"
      - name: pindel-remove-tags
        dependencies: [pindel-index-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: pindel-remove-tags
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: pindel-vcf
              value: "{{tasks.bgzip-pindel-vcf.outputs.parameters.bgzipped_output}}"
      - name: pindel-index-processed-vcf
        dependencies: [pindel-remove-tags]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: index-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "pindel"
            - name: data-type
              value: 0 #this is used to prevent subdir creation. Accepts string values.
            - name: vcf
              value: "{{tasks.pindel-remove-tags.outputs.parameters.processed_vcf}}"
## Fp filter workflow
## Input tasks.pindel-remove-tags.outputs.parameters.processed_vcf
### Pindel // FP-Filter steps
## Sanitize vcf FP-Filter steps
      - name: sanitize-pindel-vcf
        dependencies: [pindel-index-processed-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: vcf-sanitize
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "10Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "pindel"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: vcf
              value: "{{tasks.pindel-remove-tags.outputs.parameters.processed_vcf}}"
## normalize Vars FP-Filter steps
      - name: normalize-pindel-vcf
        dependencies: [sanitize-pindel-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: normalize-vars
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "10Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: service
              value: "pindel"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: vcf
              value: "{{tasks.sanitize-pindel-vcf.outputs.parameters.sani_vcf_gz}}"
## decompose vars
      - name: pindel-decompose
        dependencies: [normalize-pindel-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: docm-vt-compose
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.normalize-pindel-vcf.outputs.parameters.normalized_vcf}}"
            - name: service
              value: "pindel"
            - name: id
              value: "{{workflow.parameters.id}}"
## index decomposed_vcf
      - name: pindel-index-decom-vcf
        dependencies: [pindel-decompose]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: index-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "pindel"
            - name: data-type
              value: "decom" #this is used to prevent subdir creation. Accepts string values.
            - name: vcf
              value: "{{tasks.pindel-decompose.outputs.parameters.decomposed_vcf}}"
## Apply FP Filter
      - name: pindel-fp-filter
        dependencies: [pindel-index-decom-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: fp-filter
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: service
              value: "pindel"
            - name: vcf
              value: "{{tasks.pindel-decompose.outputs.parameters.decomposed_vcf}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: cancer-bam
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: sample-name
              value: "{{workflow.parameters.tumor-sample-name}}"
## BgZip FP
      - name: bgzip-pindel-fpfilter
        dependencies: [pindel-fp-filter]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: bgzip
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: input-file
              value: "{{tasks.pindel-fp-filter.outputs.parameters.filtered_vcf}}"
## Index FP //output=unfiltered_vcf
      - name: pindel-index-fp-vcf
        dependencies: [bgzip-pindel-fpfilter]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: index-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "pindel"
            - name: data-type
              value: "fpfilter"
            - name: vcf
              value: "{{tasks.bgzip-pindel-fpfilter.outputs.parameters.bgzipped_output}}"
## hard-filter // output=filtered_vcf
      - name: pindel-hard-filter
        dependencies: [pindel-index-fp-vcf]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: fp-filter-select-variants
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "pindel"
            - name: filename
              value: "final_filter"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: vcf-ref
              value: "{{tasks.bgzip-pindel-fpfilter.outputs.parameters.bgzipped_output}}"
            - name: target-intervals
              value: "{{workflow.parameters.target-intervals}}"
###END Pindel // FP-Filter steps
## End Pindel Block

## Begin DOCM Block
      - name: docm-haplotyper
        dependencies: [normal-index-bam,cancer-index-bam]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: docm-haplotyper
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: cancer-bam
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: normal-bam
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: docm-vcf
              value: "{{workflow.parameters.docm-vcf}}"
            - name: interval-list
              value: "{{workflow.parameters.exome-interval-list}}"
      - name: bgzip-docm-haplotype-vcf
        dependencies: [docm-haplotyper]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: bgzip
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: input-file
              value: "{{tasks.docm-haplotyper.outputs.parameters.docm_raw_variants}}"
      - name: docm-index-vcf
        dependencies: [bgzip-docm-haplotype-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: index-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "docm"
            - name: data-type
              value: "raw" #this is used to prevent subdir creation. Accepts string values.
            - name: vcf
              value: "{{tasks.bgzip-docm-haplotype-vcf.outputs.parameters.bgzipped_output}}"
      - name: docm-decompose
        dependencies: [docm-index-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: docm-vt-compose
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.bgzip-docm-haplotype-vcf.outputs.parameters.bgzipped_output}}"
            - name: service
              value: "docm"
            - name: id
              value: "{{workflow.parameters.id}}"
      - name: docm-filter
        dependencies: [docm-decompose]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: filter-dcom
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: decom-vcf
              value: "{{tasks.docm-decompose.outputs.parameters.decomposed_vcf}}"
            - name: cancer-bam
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: normal-bam
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: filter-docm
              value: "{{workflow.parameters.filter-docm-variants}}"
      - name: bgzip-docm-filter-vcf
        dependencies: [docm-filter]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: bgzip
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: input-file
              value: "{{tasks.docm-filter.outputs.parameters.docm_filtered_variants}}"
      - name: docm-index-filter-vcf
        dependencies: [bgzip-docm-filter-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: index-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "docm"
            - name: data-type
              value: 0 #this is used to prevent subdir creation. Accepts string values.
            - name: vcf
              value: "{{tasks.bgzip-docm-filter-vcf.outputs.parameters.bgzipped_output}}"
## End DOCM Block
## Combine
      - name: combine-variants
        dependencies: [pindel-hard-filter, varscan-hard-filter, strelka-hard-filter, mutect-hard-filter]
        templateRef:
          name: immuno-somatic-exome-detect-vars-pp
          template: combine-variants
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: mutect-vcf
              value: "{{tasks.mutect-hard-filter.outputs.parameters.filtered_vcf}}"
            - name: varscan-vcf
              value: "{{tasks.varscan-hard-filter.outputs.parameters.filtered_vcf}}"
            - name: strelka-vcf
              value: "{{tasks.strelka-hard-filter.outputs.parameters.filtered_vcf}}"
            - name: pindel-vcf
              value: "{{tasks.pindel-hard-filter.outputs.parameters.filtered_vcf}}"
## Add docm vars
      - name: combine-docm-variants
        dependencies: [combine-variants, docm-index-filter-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars-pp
          template: add-docm-variants
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: callers-vcf
              value: "{{tasks.combine-variants.outputs.parameters.combined_vcf}}"
            - name: docm-vcf
              value: "{{tasks.bgzip-docm-filter-vcf.outputs.parameters.bgzipped_output}}"
## Vt decompose
      - name: variants-decompose
        dependencies: [combine-docm-variants]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: docm-vt-compose
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.combine-docm-variants.outputs.parameters.merged_vcf}}"
            - name: service
              value: "detect-variants"
            - name: id
              value: "{{workflow.parameters.id}}"
## index
      - name: index-decomposed-variants
        dependencies: [variants-decompose]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: index-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "detect-variants"
            - name: data-type
              value: decom #this is used to prevent subdir creation. Accepts string values.
            - name: vcf
              value: "{{tasks.variants-decompose.outputs.parameters.decomposed_vcf}}"
## vep annotate
      - name: annotate-variants
        dependencies: [index-decomposed-variants]
        templateRef:
          name: immuno-somatic-exome-detect-vars-pp
          template: vep-annotation
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.variants-decompose.outputs.parameters.decomposed_vcf}}"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: cache-dir
              value: "{{workflow.parameters.vep-cache-dir}}"
            - name: ensembl-assembly
              value: "{{workflow.parameters.vep-ensembl-assembly}}"
            - name: ensembl-version
              value: "{{workflow.parameters.vep-ensembl-version}}"
            - name: ensembl-species
              value: "{{workflow.parameters.vep-ensembl-species}}"
            - name: synonyms-file
              value: "{{workflow.parameters.vep-syn-file}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: pick
              value: "flag_pick"
            - name: custom-annotations
              value: "{{workflow.parameters.vep-custom-annotation}},gnomADe,vcf,exact,1,AF,AF_AFR,AF_AMR,AF_ASJ,AF_EAS,AF_FIN,AF_NFE,AF_OTH,AF_SAS" ### process
            - name: plugin1
              value: "Downstream"
            - name: plugin2
              value: "Wildtype"
## bam readcount cancer
      - name: cancer-bam-readcount
        dependencies: [annotate-variants]
        templateRef:
          name: immuno-somatic-exome-detect-vars-pp
          template: bam-readcount
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.annotate-variants.outputs.parameters.annotated_vcf}}"
            - name: sample-name
              value: "{{workflow.parameters.tumor-sample-name}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: bam
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: min-base-quality
              value: 20
            - name: min-mapping-quality
              value: 0
            - name: prefix
              value: "{{workflow.parameters.id}}"
## bam readcount normal
      - name: normal-bam-readcount
        dependencies: [annotate-variants]
        templateRef:
          name: immuno-somatic-exome-detect-vars-pp
          template: bam-readcount
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.annotate-variants.outputs.parameters.annotated_vcf}}"
            - name: sample-name
              value: "{{workflow.parameters.normal-sample-name}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: bam
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: min-base-quality
              value: 20
            - name: min-mapping-quality
              value: 0
            - name: prefix
              value: "{{workflow.parameters.id}}"
#add_tumor_bam_readcount_to_vcf use #readcount subdir for work
#vcf-readcount
# add snv
      - name: add-cancer-bam-readcount-snv
        dependencies: [cancer-bam-readcount, normal-bam-readcount]
        templateRef:
          name: immuno-somatic-exome-detect-vars-pp
          template: vcf-readcount
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "4Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.annotate-variants.outputs.parameters.annotated_vcf}}"
            - name: sample-name
              value: "{{workflow.parameters.tumor-sample-name}}"
            - name: bam-readcount-tsv
              value: "{{tasks.cancer-bam-readcount.outputs.parameters.snv_bam_readcount_tsv}}" #tasks.cancer-bam-readcount.outputs.parameters.snv_bam_readcount_tsv
            - name: data-type
              value: "DNA" #DNA, RNA, all
            - name: variant-type
              value: snv
# add indel
      - name: add-cancer-bam-readcount-indel
        dependencies: [add-cancer-bam-readcount-snv]
        templateRef:
          name: immuno-somatic-exome-detect-vars-pp
          template: vcf-readcount
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "4Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.add-cancer-bam-readcount-snv.outputs.parameters.annotated_bam_readcount_vcf}}"
            - name: sample-name
              value: "{{workflow.parameters.tumor-sample-name}}"
            - name: bam-readcount-tsv
              value: "{{tasks.cancer-bam-readcount.outputs.parameters.indel_bam_readcount_tsv}}" #tasks.cancer-bam-readcount.outputs.parameters.snv_bam_readcount_tsv
            - name: data-type
              value: "DNA" #DNA, RNA, all
            - name: variant-type
              value: indel
#add_normal_bam_readcount_to_vcf use vcf output from tumor steps
#vcf-readcount
# add snv
      - name: add-normal-bam-readcount-snv
        dependencies: [normal-bam-readcount,add-cancer-bam-readcount-indel]
        templateRef:
          name: immuno-somatic-exome-detect-vars-pp
          template: vcf-readcount
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "4Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.add-cancer-bam-readcount-indel.outputs.parameters.annotated_bam_readcount_vcf}}"
            - name: sample-name
              value: "{{workflow.parameters.normal-sample-name}}"
            - name: bam-readcount-tsv
              value: "{{tasks.normal-bam-readcount.outputs.parameters.snv_bam_readcount_tsv}}" #tasks.normal-bam-readcount.outputs.parameters.snv_bam_readcount_tsv
            - name: data-type
              value: "DNA" #DNA, RNA, all
            - name: variant-type
              value: snv
# add indel
      - name: add-normal-bam-readcount-indel
        dependencies: [add-normal-bam-readcount-snv]
        templateRef:
          name: immuno-somatic-exome-detect-vars-pp
          template: vcf-readcount
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "4Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.add-normal-bam-readcount-snv.outputs.parameters.annotated_bam_readcount_vcf}}"
            - name: sample-name
              value: "{{workflow.parameters.normal-sample-name}}"
            - name: bam-readcount-tsv
              value: "{{tasks.normal-bam-readcount.outputs.parameters.indel_bam_readcount_tsv}}" #tasks.normal-bam-readcount.outputs.parameters.snv_bam_readcount_tsv
            - name: data-type
              value: "DNA" #DNA, RNA, all
            - name: variant-type
              value: indel
#index final vcf
      - name: detect-variants-index-vcf
        dependencies: [add-normal-bam-readcount-indel]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: index-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "8Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "detect-variants"
            - name: data-type
              value: readcount #this is used to prevent subdir creation. Accepts string values.
            - name: vcf
              value: "{{tasks.add-normal-bam-readcount-indel.outputs.parameters.annotated_bam_readcount_vcf}}"
#filter vcf
      - name: filter-known-variants
        dependencies: [detect-variants-index-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars-pp
          template: filter-known-variants
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "8Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.add-normal-bam-readcount-indel.outputs.parameters.annotated_bam_readcount_vcf}}"
            #- name: known_variants
            #  value:
      - name: filter-vcf-allele-freq
        dependencies: [filter-known-variants]
        templateRef:
          name: immuno-somatic-exome-detect-vars-pp
          template: filter-vcf-custom-allele-freq
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "8Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.filter-known-variants.outputs.parameters.known_filtered}}"
            - name: maximum-population-allele-freq
              value: "{{workflow.parameters.max-population-allele-freq}}"
#filter_mapq0
      - name: filter-vcf-mapq0
        dependencies: [filter-vcf-allele-freq]
        templateRef:
          name: immuno-somatic-exome-detect-vars-pp
          template: filter-vcf-mapq0
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "8Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.filter-vcf-allele-freq.outputs.parameters.filtered_vcf}}"
            - name: cancer-bam
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: threshold
              value: "0.15"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
#filter_cle
      - name: filter-vcf-cle
        dependencies: [filter-vcf-mapq0]
        templateRef:
          name: immuno-somatic-exome-detect-vars-pp
          template: filter-vcf-cle
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "8Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.filter-vcf-mapq0.outputs.parameters.mapq0_filtered_vcf}}"
            #- name: filter
            #  value: ""
#filter depth
      - name: filter-vcf-depth
        dependencies: [filter-vcf-cle]
        templateRef:
          name: immuno-somatic-exome-detect-vars-pp
          template: filter-vcf-depth
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "8Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.filter-vcf-cle.outputs.parameters.cle_filtered_vcf}}"
            - name: min-depth
              value: 1
            - name: cancer-sample-name
              value: "{{workflow.parameters.tumor-sample-name}}"
            - name: normal-sample-name
              value: "{{workflow.parameters.normal-sample-name}}"
#filter llr
      - name: filter-vcf-somatic-llr
        dependencies: [filter-vcf-depth]
        templateRef:
          name: immuno-somatic-exome-detect-vars-pp
          template: filter-vcf-somatic-llr
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "8Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.filter-vcf-depth.outputs.parameters.depth_filtered_vcf}}"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: threshold
              value: 5
            - name: cancer-sample-name
              value: "{{workflow.parameters.tumor-sample-name}}"
            - name: normal-sample-name
              value: "{{workflow.parameters.normal-sample-name}}"
#bgzip
      - name: bgzip-annotated-filtered-vcf
        dependencies: [filter-vcf-somatic-llr]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: bgzip
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "8Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: input-file
              value: "{{tasks.filter-vcf-somatic-llr.outputs.parameters.somatic_llr_filtered_vcf}}"
#index
      - name: index-annotated-filtered-vcf
        dependencies: [bgzip-annotated-filtered-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: index-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "8Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "detect-variants"
            - name: data-type
              value: final #this is used to prevent subdir creation. Accepts string values.
            - name: vcf
              value: "{{tasks.bgzip-annotated-filtered-vcf.outputs.parameters.bgzipped_output}}"
#variants to table
      - name: variants-to-table
        dependencies: [index-annotated-filtered-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars-pp
          template: variants-to-table
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "8Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.bgzip-annotated-filtered-vcf.outputs.parameters.bgzipped_output}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: fields
              value: "CHROM POS REF ALT set"
            - name: genotype-fields
              value: "GT AD AF DP"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: service-dir
              value: "detect-variants/final"
#add vep variants to table #final tsv
      - name: add-vep-to-variant-table
        dependencies: [variants-to-table]
        templateRef:
          name: immuno-somatic-exome-detect-vars-pp
          template: vep-annotation-reporter
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "8Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.bgzip-annotated-filtered-vcf.outputs.parameters.bgzipped_output}}"
            - name: vep-fields
              value: "Consequence SYMBOL Feature_type Feature HGVSc HGVSp cDNA_position CDS_position Protein_position Amino_acids Codons HGNC_ID Existing_variation gnomADe_AF CLIN_SIG SOMATIC PHENO clinvar_CLINSIGN clinvar_PHENOTYPE clinvar_SCORE clinvar_RCVACC clinvar_TESTEDINGTR clinvar_PHENOTYPELIST clinvar_NUMSUBMIT clinvar_GUIDELINES"
            - name: variants-tsv
              value: "{{tasks.variants-to-table.outputs.parameters.variants_tsv}}"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: service-dir
              value: "detect-variants/final"
### END DETECT VARIANTS
## END SOMATIC WORKFLOW
## BEGIN GERMLINE
##extract freemix -- Dependency on Alignment and QC normal
      - name: extract-freemix-score
        dependencies: [normal-verify-bam]
        templateRef:
          name: immuno-germline-workflow
          template: extract-freemix
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "2"
            - name: "mem"
              value: "2Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: verify_bam_id_metrics
              value: "{{tasks.normal-verify-bam.outputs.parameters.verify_bam_id_metrics}}"
##detect-variants Germline
##haplotypecaller
##genotype
      - name: germline-haplo-genotyper
        dependencies: [extract-freemix-score]
        templateRef:
          name: immuno-germline-workflow
          template: gatk-haplotype-workflow
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "8"
            - name: "mem"
              value: "48Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: bam
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: intervals
              value: "{{workflow.parameters.gatk-haplotypecaller-intervals}}"
            - name: contamination-fraction
              value: "{{tasks.extract-freemix-score.outputs.parameters.freemix_score}}"
            - name: emit-ref-confidence
              value: "{{workflow.parameters.emit-ref-confidence}}"
##annotate_vars
      - name: germline-annotate-variants
        dependencies: [germline-haplo-genotyper]
        templateRef:
          name: immuno-germline-workflow
          template: germline-vep-annotation
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.germline-haplo-genotyper.outputs.parameters.genotype_vcf}}"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: cache-dir
              value: "{{workflow.parameters.vep-cache-dir}}"
            - name: ensembl-assembly
              value: "{{workflow.parameters.vep-ensembl-assembly}}"
            - name: ensembl-version
              value: "{{workflow.parameters.vep-ensembl-version}}"
            - name: ensembl-species
              value: "{{workflow.parameters.vep-ensembl-species}}"
            - name: synonyms-file
              value: "{{workflow.parameters.vep-syn-file}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: custom-annotations
              value: "{{workflow.parameters.vep-custom-annotation}},gnomADe,vcf,exact,1,AF,AF_AFR,AF_AMR,AF_ASJ,AF_EAS,AF_FIN,AF_NFE,AF_OTH,AF_SAS" ### process
            - name: plugin1
              value: "Downstream"
            - name: plugin2
              value: "Wildtype"
##bgzip annoated VCF
      - name: germline-bgzip-annotated-vcf
        dependencies: [germline-annotate-variants]
        templateRef:
          name: immuno-germline-workflow
          template: germ-bgzip
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "8Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: input-file
              value: "{{tasks.germline-annotate-variants.outputs.parameters.annotated_vcf}}"
##index annotated VCF
      - name: germline-index-annotated-vcf
        dependencies: [germline-bgzip-annotated-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: index-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "8"
            - name: "mem"
              value: "24Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "normal_final"
            - name: data-type
              value: germline-filter #this is used to prevent subdir creation. Accepts string values.
            - name: vcf
              value: "{{tasks.germline-bgzip-annotated-vcf.outputs.parameters.bgzipped_output}}"
##germline filter
#filter vcf coding
      - name: germline-filter-coding-var
        dependencies: [germline-index-annotated-vcf]
        templateRef:
          name: immuno-germline-workflow
          template: filter-vcf-coding
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "4Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.germline-annotate-variants.outputs.parameters.annotated_vcf}}"
#gnomad-freq-filter
      - name: germline-gnomad-freq-filter
        dependencies: [germline-filter-coding-var]
        templateRef:
          name: immuno-germline-workflow
          template: gnomad-freq-filter
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "4Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.germline-filter-coding-var.outputs.parameters.filtered_vcf}}"
            - name: maximum-population-allele-freq
              value: "{{workflow.parameters.max-population-allele-freq}}"
#bgzip //filtered_final
      - name: bgzip-germline-annotated-filter
        dependencies: [germline-gnomad-freq-filter]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: bgzip
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: input-file
              value: "{{tasks.germline-gnomad-freq-filter.outputs.parameters.filtered_vcf}}"
#index //filtered_final
      - name: germline-index-annotated-filter-vcf
        dependencies: [bgzip-germline-annotated-filter]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: index-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "8"
            - name: "mem"
              value: "24Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "normal_final"
            - name: data-type
              value: germline-filter #this is used to prevent subdir creation. Accepts string values.
            - name: vcf
              value: "{{tasks.bgzip-germline-annotated-filter.outputs.parameters.bgzipped_output}}"
#select variants //final_vcf
      - name: germline-select-variants
        dependencies: [germline-index-annotated-filter-vcf]
        templateRef:
          name: immuno-germline-workflow
          template: limit-variants
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "8Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "normal_final"
            - name: filename
              value: "annotated.filtered.final"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: vcf-ref
              value: "{{tasks.bgzip-germline-annotated-filter.outputs.parameters.bgzipped_output}}"
            - name: target-intervals
              value: "{{workflow.parameters.target-intervals}}"
##vars to table filtered
      - name: germline-vars-table-filtered
        dependencies: [germline-index-annotated-filter-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars-pp
          template: variants-to-table
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "8Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.bgzip-germline-annotated-filter.outputs.parameters.bgzipped_output}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: fields
              value: "CHROM POS REF ALT set"
            - name: genotype-fields
              value: "GT AD AF DP"
            - name: id
              value: "{{workflow.parameters.id}}_filtered"
            - name: service-dir
              value: "normal_final"
##add vep fields to table filtered
      - name: germline-add-vep-to-table-filtered
        dependencies: [germline-index-annotated-filter-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars-pp
          template: vep-annotation-reporter
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "8Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{tasks.bgzip-germline-annotated-filter.outputs.parameters.bgzipped_output}}"
            - name: vep-fields
              value: "Consequence SYMBOL Feature_type Feature HGVSc HGVSp cDNA_position CDS_position Protein_position Amino_acids Codons HGNC_ID Existing_variation gnomADe_AF CLIN_SIG SOMATIC PHENO clinvar_CLINSIGN clinvar_PHENOTYPE clinvar_SCORE clinvar_RCVACC clinvar_TESTEDINGTR clinvar_PHENOTYPELIST clinvar_NUMSUBMIT clinvar_GUIDELINES"
            - name: variants-tsv
              value: "{{tasks.germline-vars-table-filtered.outputs.parameters.variants_tsv}}"
            - name: id
              value: "{{workflow.parameters.id}}_filtered"
            - name: service-dir
              value: "normal_final"
##vars to table final
      - name: germline-vars-table-final
        dependencies: [germline-select-variants]
        templateRef:
          name: immuno-somatic-exome-detect-vars-pp
          template: variants-to-table
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "8Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.germline-select-variants.outputs.parameters.filtered_vcf}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: fields
              value: "CHROM POS REF ALT set"
            - name: genotype-fields
              value: "GT AD AF DP"
            - name: id
              value: "{{workflow.parameters.id}}_final"
            - name: service-dir
              value: "normal_final"
##add vep fields to table final
      - name: germline-add-vep-to-table-final
        dependencies: [germline-vars-table-final]
        templateRef:
          name: immuno-somatic-exome-detect-vars-pp
          template: vep-annotation-reporter
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "8Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.germline-select-variants.outputs.parameters.filtered_vcf}}"
            - name: vep-fields
              value: "Consequence SYMBOL Feature_type Feature HGVSc HGVSp cDNA_position CDS_position Protein_position Amino_acids Codons HGNC_ID Existing_variation gnomADe_AF CLIN_SIG SOMATIC PHENO clinvar_CLINSIGN clinvar_PHENOTYPE clinvar_SCORE clinvar_RCVACC clinvar_TESTEDINGTR clinvar_PHENOTYPELIST clinvar_NUMSUBMIT clinvar_GUIDELINES"
            - name: variants-tsv
              value: "{{tasks.germline-vars-table-final.outputs.parameters.variants_tsv}}"
            - name: id
              value: "{{workflow.parameters.id}}_final"
            - name: service-dir
              value: "normal_final"
##detect-variants Germline
##optitype
      - name: germline-optitype-dna
        dependencies: [normal-bam-to-cram]
        templateRef:
          name: immuno-germline-workflow
          template: optitype-dna
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "64Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: cram
              value: "{{tasks.normal-bam-to-cram.outputs.parameters.crammed-bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: optitype_name
              value: optitype
##END GERMLINE
## HLA EXTRACT ALLELES AND CONSENSUS
      - name: hla-extract-and-consensus
        dependencies: [germline-optitype-dna]
        templateRef:
          name: immuno-germline-workflow
          template: hla-extract-consensus
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: opti-tsv
              value: "{{tasks.germline-optitype-dna.outputs.parameters.optitype_tsv}}"
## END HLA EXTRACT ALLELES AND CONSENSUS

##PhaseVCF
# germ-vcf
            #- name: vcf
            #  value: "{{tasks.germline-select-variants.outputs.parameters.filtered_vcf}}"
# somatic-vcf
            #- name: vcf
            #  value: "{{tasks.add-normal-bam-readcount-indel.outputs.parameters.annotated_bam_readcount_vcf}}"
# tumor-cram
            #- name: cram
            #  value: "{{tasks.tumor-bam-to-cram.outputs.parameters.crammed-bam}}"
#rename germ vcf
      - name: phasevcf-rename-vcf
        dependencies: [germline-select-variants]
        templateRef:
          name: immuno-phasevcf-workflow
          template: rename-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: vcf
              value: "{{tasks.germline-select-variants.outputs.parameters.filtered_vcf}}"
            - name: sample-to-replace
              value: "{{workflow.parameters.normal-sample-name}}"
            - name: new-sample-name
              value: "{{workflow.parameters.tumor-sample-name}}"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: service
              value: phasevcf
# index renamed
      - name: index-renamed-phasevcf
        dependencies: [phasevcf-rename-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: index-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "phasevf"
            - name: data-type
              value: 0 #this is used to prevent subdir creation. Accepts string values.
            - name: vcf
              value: "{{tasks.phasevcf-rename-vcf.outputs.parameters.renamed_vcf}}"
# select vars
      - name: phase-select-variants
        dependencies: [detect-variants-index-vcf]
        templateRef:
          name: immuno-phasevcf-workflow
          template: select-somatic-variants
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "4"
            - name: "mem"
              value: "8Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "phasevcf"
            - name: filename
              value: "somatic_tumor_only"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: vcf-ref
              value: "{{tasks.add-normal-bam-readcount-indel.outputs.parameters.annotated_bam_readcount_vcf}}"
            - name: sample-name
              value: "{{workflow.parameters.tumor-sample-name}}"
# index vars
      - name: index-phase-select-vars
        dependencies: [phase-select-variants]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: index-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "phasevf"
            - name: data-type
              value: 0 #this is used to prevent subdir creation. Accepts string values.
            - name: vcf
              value: "{{tasks.phase-select-variants.outputs.parameters.filtered_vcf}"
# pvascseq combine vars
      - name: phase-combine-vars
        dependencies: [index-phase-select-vars, index-renamed-phasevcf]
        templateRef:
          name: immuno-phasevcf-workflow
          template: pvacseq-combine-vars
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: germ-vcf
              value: "{{tasks.phasevcf-rename-vcf.outputs.parameters.renamed_vcf}}"
            - name: somatic-vcf
              value: "{{tasks.phase-select-variants.outputs.parameters.filtered_vcf}"
# sort vcf
      - name: phase-sort-vars
        dependencies: [phase-combine-vars]
        templateRef:
          name: immuno-phasevcf-workflow
          template: sort-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: vcf
              value: "{{tasks.phase-combine-vars.outputs.parameters.combined_vcf}}"
            - name: service
              value: "phasevcf"
            - name: id
              value: "{{workflow.parameters.id}}"
# bgzip and index
      - name: bgzip-phase-sort-vars
        dependencies: [phase-sort-vars]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: bgzip
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: input-file
              value: "{{tasks.phase-sort-vars.outputs.parameters.sorted_vcf}}"
      - name: index-phase-sort-vars
        dependencies: [bgzip-phase-sort-vars]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: index-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "phasevcf"
            - name: data-type
              value: 0
            - name: vcf
              value: "{{tasks.bgzip-phase-sort-vars.outputs.parameters.bgzipped_output}}"
# phased vcf
      - name: phased-vcf
        dependencies: [index-phase-sort-vars,tumor-bam-to-cram]
        templateRef:
          name: immuno-phasevcf-workflow
          template: sort-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: vcf
              value: "{{tasks.bgzip-phase-sort-vars.outputs.parameters.bgzipped_output}}"
            - name: service
              value: "phasevcf"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: bam
              value: "{{tasks.tumor-bam-to-cram.outputs.parameters.crammed-bam}}"
# bgzip and index
      - name: bgzip-phased-vcf
        dependencies: [phased-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: bgzip
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: input-file
              value: "{{tasks.phased-vcf.outputs.parameters.phased_vcf}}"
      - name: index-phased-vcf
        dependencies: [bgzip-phased-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: index-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.phased-vcf.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: service
              value: "phasevcf"
            - name: data-type
              value: 0
            - name: vcf
              value: "{{tasks.bgzip-phased-vcf.outputs.parameters.bgzipped_output}}"
