apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: mgbio-pipeline
spec:
  volumes:
    - name: pvc-reference
      persistentVolumeClaim:
        claimName: workflow-ref-hg38-dev
  imagePullSecrets:
    - name: mgbio-cred
    - name: mcdb-bot
  entrypoint: immuno-pipeline
  arguments:
    parameters:
    - name: id
    - name: ns
    - name: pvc
    - name: size
    - name: output-dir
    - name: s3-gen-dir
    - name: vault-name
    - name: rna-fastq-r1
    - name: rna-fastq-r2
    - name: normal-fastq-r1
    - name: normal-fastq-r2
    - name: cancer-fastq-r1
    - name: cancer-fastq-r2
    - name: normal-readGroup
    - name: cancer-readGroup
    - name: genome-reference
    - name: input-sort-order
    - name: strand
    - name: bqsr-intervals
    - name: known-indels
    - name: dbsnp-vcf
    - name: bait-intervals
    - name: target-intervals
    - name: per-base-intervals
    - name: per-target-intervals
    - name: summary-intervals
    - name: omni-vcf
    - name: picard-metric-accumulation-level
    - name: qc_minimum_mapping_quality
    - name: qc_minimum_base_quality
    - name: ref-flat
    - name: ribsomal-ints
    - name: rna-reference-annotation
    - name: gene-transcript-lookup-table
    - name: kallisto-index
    - name: hisat-index
    - name: trim-adapter-file
    - name: somalier-vcf
  onExit: exit-handler
  templates:
  - name: generate-pvc
    inputs:
      parameters:
      - name: id
      - name: ns
      - name: pvc
      - name: size
    resource:
      action: create
      #successCondition: status.phase = Bound
      #failureCondition: status.phase != Bound
      manifest: |
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: {{inputs.parameters.pvc}}-{{inputs.parameters.id}}
          namespace: {{inputs.parameters.ns}}
        spec:
          accessModes:
          - ReadWriteMany
          resources:
            requests:
              storage: {{inputs.parameters.size}}
          storageClassName: rook-cephfs
        ---
    outputs:
      parameters:
        - name: pvc-name
          valueFrom:
            jsonPath: '{.metadata.name}'
  - name: get-data
    inputs:
      parameters:
      - name: pvc-name
      - name: vault-name
      - name: s3-gen-dir
    volumes:
      - name: '{{inputs.parameters.pvc-name}}'
        persistentVolumeClaim:
          claimName: '{{inputs.parameters.pvc-name}}'
    container:
      image: docker.cancerdb.io/mcdb-bots/bootstrap:mgbio
      imagePullPolicy: Always
      volumeMounts:
      - name: '{{inputs.parameters.pvc-name}}'
        mountPath: /data
      env:
      - name: VAULT_ENDPOINT
        value: '{{inputs.parameters.vault-name}}'
      - name: GENOMIC_PATH
        value: '{{inputs.parameters.s3-gen-dir}}'
  - name: cleanup
    inputs:
      parameters:
      - name: vault-name
        value: "{{workflow.parameters.vault-name}}"
      - name: pvc
        value: "{{workflow.parameters.pvc}}"
      - name: id
        value: "{{workflow.parameters.id}}"
    volumes:
      - name: "{{inputs.parameters.pvc}}-{{inputs.parameters.id}}"
        persistentVolumeClaim:
          claimName: "{{inputs.parameters.pvc}}-{{inputs.parameters.id}}"
    container:
      image: docker.cancerdb.io/mcdb-bots/wrkflw-cleanup:mgbio
      imagePullPolicy: Always
      volumeMounts:
      - name: "{{inputs.parameters.pvc}}-{{inputs.parameters.id}}"
        mountPath: /data
      env:
      - name: VAULT_ENDPOINT
        value: '{{inputs.parameters.vault-name}}'
      - name: PATIENT_ID
        value: '{{inputs.parameters.id}}'
  - name: exit-handler
    steps:
    - - name: cleanup
        template: cleanup
  - name: immuno-pipeline
    dag:
      tasks:
      - name: generate-pvc-data
        template: generate-pvc
        arguments:
          parameters:
            - name: ns
              value: "{{workflow.parameters.ns}}"
            - name: pvc
              value: "{{workflow.parameters.pvc}}"
            - name: size
              value: "{{workflow.parameters.size}}"
            - name: id
              value: "{{workflow.parameters.id}}"
      - name: bootstrap-data
        template: get-data
        dependencies: [generate-pvc-data]
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: vault-name
              value: "{{workflow.parameters.vault-name}}"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: s3-gen-dir
              value: "{{workflow.parameters.s3-gen-dir}}"

##Begin RNA-Seq Steps
      - name: rna-seq-trim-reads
        dependencies: [bootstrap-data]
        templateRef:
          name: immuno-rnaseq-workflow
          template: trim-fastq
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "8"
            - name: "mem"
              value: "20Gi"
            - name: threads
              value: 8
            - name: data-type
              value: rna
            - name: trim-adapter-file
              value: "{{workflow.parameters.trim-adapter-file}}"
            - name: trim-adapter-end
              value: 'RIGHT'
            - name: trim-adapter-min-overlap
              value: 7
            - name: trim-max_uncalled
              value: 300
            - name: trim-min-readlength
              value: 25
            - name: rna-fastq-r1
              value: "{{workflow.parameters.rna-fastq-r1}}"
            - name: rna-fastq-r2
              value: "{{workflow.parameters.rna-fastq-r2}}"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
      - name: rna-seq-hisat2-align
        dependencies: [rna-seq-trim-reads]
        templateRef:
          name: immuno-rnaseq-workflow
          template: hisat2-align
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "28"
            - name: "mem"
              value: "90Gi"
            - name: threads
              value: 24
            - name: data-type
              value: rna
            - name: trimmed_fastq1
              value: "{{tasks.rna-seq-trim-reads.outputs.parameters.trimmed_fastq1}}"
            - name: trimmed_fastq2
              value: "{{tasks.rna-seq-trim-reads.outputs.parameters.trimmed_fastq2}}"
            - name: reference_index
              value: "{{workflow.parameters.hisat-index}}"
            - name: read_group_id
              value: 2895626107 #unique-id
            - name: read_group_fields
              value: "{{workflow.parameters.rna-readGroup}}" ## coma seperated list
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: strand
              value: "{{workflow.parameters.strand}}"
      - name: rna-seq-kallisto
        dependencies: [rna-seq-hisat2-align]
        templateRef:
          name: immuno-rnaseq-workflow
          template: kallisto-run
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "16"
            - name: "mem"
              value: "64Gi"
            - name: threads
              value: 16
            - name: data-type
              value: rna
            - name: trimmed_fastq1
              value: "{{tasks.rna-seq-trim-reads.outputs.parameters.trimmed_fastq1}}"
            - name: trimmed_fastq2
              value: "{{tasks.rna-seq-trim-reads.outputs.parameters.trimmed_fastq2}}"
            - name: kallisto_index
              value: "{{workflow.parameters.kallisto-index}}"
            - name: strand
              value: "{{workflow.parameters.strand}}"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
      - name: rna-seq-transcript-gene
        dependencies: [rna-seq-kallisto]
        templateRef:
          name: immuno-rnaseq-workflow
          template: rna-transcript-to-gene
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "1"
            - name: "mem"
              value: "2Gi"
            - name: data-type
              value: rna
            - name: transcript_table_h5
              value: "{{tasks.rna-seq-kallisto.outputs.parameters.expression_transcript_h5}}"
            - name: gene_transcript_lookup_table
              value: "{{workflow.parameters.gene-transcript-lookup-table}}"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
      - name: rna-index-bam
        dependencies: [rna-seq-hisat2-align]
        templateRef:
          name: immuno-rnaseq-workflow
          template: index-bam
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "10"
            - name: "mem"
              value: "20Gi"
            - name: data-type
              value: rna
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: dir-name
              value: index_bam
            - name: bam-file
              value: "{{tasks.rna-seq-hisat2-align.outputs.parameters.aligned_bam}}"
      - name: rna-mark-duplicates
        dependencies: [rna-seq-hisat2-align]
        templateRef:
          name: immuno-rnaseq-workflow
          template: mark-dup
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "38"
            - name: "mem"
              value: "50Gi"
            - name: threads
              value: 10
            - name: data-type
              value: rna
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: bam-file
              value: "{{tasks.rna-seq-hisat2-align.outputs.parameters.aligned_bam}}"
            - name: input-sort-order
              value: "{{workflow.parameters.input-sort-order}}"
      - name: run-stringtie
        dependencies: [rna-mark-duplicates]
        templateRef:
          name: immuno-rnaseq-workflow
          template: stringtie
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "20"
            - name: "mem"
              value: "50Gi"
            - name: threads
              value: 20
            - name: data-type
              value: rna
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: bam-file
              value: "{{tasks.rna-mark-duplicates.outputs.parameters.marksorted_bam}}"
            - name: strand
              value: "{{workflow.parameters.strand}}"
            - name: reference-annotation
              value: "{{workflow.parameters.rna-reference-annotation}}"
      - name: rna-qc-metrics
        dependencies: [rna-index-bam]
        templateRef:
          name: immuno-rnaseq-workflow
          template: gen-qc-metrics
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "1"
            - name: "mem"
              value: "20Gi"
            - name: threads
              value: 1
            - name: data-type
              value: rna
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: strand
              value: "{{workflow.parameters.strand}}"
            - name: bam-file
              value: "{{tasks.rna-seq-hisat2-align.outputs.parameters.aligned_bam}}"
            - name: refFlat
              value: "{{workflow.parameters.ref-flat}}"
            - name: ribsomal-ints
              value: "{{workflow.parameters.ribsomal-ints}}"
##End RNA-Seq Steps
##Begin Somatic Steps
# BWA alignment
      - name: bwa-align-normal-exome
        dependencies: [bootstrap-data]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: bwa-align
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "25"
            - name: "mem"
              value: "30Gi"
            - name: threads
              value: 24
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: "normal"
            - name: exome-fastq-r1
              value: "{{workflow.parameters.normal-fastq-r1}}"
            - name: exome-fastq-r2
              value: "{{workflow.parameters.normal-fastq-r2}}"
            - name: readGroup
              value: "{{workflow.parameters.normal-readGroup}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
      - name: bwa-align-cancer-exome
        dependencies: [bootstrap-data]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: bwa-align
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "25"
            - name: "mem"
              value: "30Gi"
            - name: threads
              value: 24
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: "cancer"
            - name: exome-fastq-r1
              value: "{{workflow.parameters.cancer-fastq-r1}}"
            - name: exome-fastq-r2
              value: "{{workflow.parameters.cancer-fastq-r2}}"
            - name: readGroup
              value: "{{workflow.parameters.cancer-readGroup}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
#name sort
      - name: name-sort-normal-exome
        dependencies: [bwa-align-normal-exome]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: name-sort
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "20"
            - name: "mem"
              value: "32Gi"
            - name: threads
              value: 20
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: normal
            - name: bam-file
              value: "{{tasks.bwa-align-normal-exome.outputs.parameters.aligned_bam}}"
      - name: name-sort-cancer-exome
        dependencies: [bwa-align-cancer-exome]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: name-sort
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "20"
            - name: "mem"
              value: "32Gi"
            - name: threads
              value: 20
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: cancer
            - name: bam-file
              value: "{{tasks.bwa-align-cancer-exome.outputs.parameters.aligned_bam}}"
##mark_dups
      - name: normal-exome-mark-dups
        dependencies: [name-sort-normal-exome]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: mark-dup
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "38"
            - name: "mem"
              value: "50Gi"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: threads
              value: 10
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: normal
            - name: bam-file
              value: "{{tasks.name-sort-normal-exome.outputs.parameters.name_sorted_bam}}"
            - name: input-sort-order
              value: "queryname"
      - name: cancer-exome-mark-dups
        dependencies: [name-sort-cancer-exome]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: mark-dup
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "38"
            - name: "mem"
              value: "50Gi"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: threads
              value: 10
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: cancer
            - name: bam-file
              value: "{{tasks.name-sort-cancer-exome.outputs.parameters.name_sorted_bam}}"
            - name: input-sort-order
              value: "queryname"
####bqsr
      - name: normal-exome-bqsr
        dependencies: [normal-exome-mark-dups]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: bqsr
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: normal
            - name: bam-file
              value: "{{tasks.normal-exome-mark-dups.outputs.parameters.marksorted_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: bqsr-intervals
              value: "{{workflow.parameters.bqsr-intervals}}"
            - name: known-indels
              value: "{{workflow.parameters.known-indels}}"
            - name: dbsnp-vcf
              value: "{{workflow.parameters.dbsnp-vcf}}"
      - name: cancer-exome-bqsr
        dependencies: [cancer-exome-mark-dups]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: bqsr
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: cancer
            - name: bam-file
              value: "{{tasks.cancer-exome-mark-dups.outputs.parameters.marksorted_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: bqsr-intervals
              value: "{{workflow.parameters.bqsr-intervals}}"
            - name: known-indels
              value: "{{workflow.parameters.known-indels}}"
            - name: dbsnp-vcf
              value: "{{workflow.parameters.dbsnp-vcf}}"
###apply_bqsr
      - name: normal-exome-apply-bqsr
        dependencies: [normal-exome-bqsr]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: apply-bqsr
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: normal
            - name: bam-file
              value: "{{tasks.normal-exome-mark-dups.outputs.parameters.marksorted_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: bqsr-table
              value: "{{tasks.normal-exome-bqsr.outputs.parameters.bqsr_table}}"
      - name: cancer-exome-apply-bqsr
        dependencies: [cancer-exome-bqsr]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: apply-bqsr
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: cancer
            - name: bam-file
              value: "{{tasks.cancer-exome-mark-dups.outputs.parameters.marksorted_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: bqsr-table
              value: "{{tasks.cancer-exome-bqsr.outputs.parameters.bqsr_table}}"
###index_bam
      - name: normal-index-bam
        dependencies: [normal-exome-apply-bqsr]
        templateRef:
          name: immuno-rnaseq-workflow
          template: index-bam
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: normal
            - name: dir-name
              value: final
            - name: bam-file
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
      - name: cancer-index-bam
        dependencies: [cancer-exome-apply-bqsr]
        templateRef:
          name: immuno-rnaseq-workflow
          template: index-bam
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: cancer
            - name: dir-name
              value: final
            - name: bam-file
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
#### QC_Exome
      - name: normal-collect-insert-size-metrics
        dependencies: [normal-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: insert-size-metrics
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: normal
            - name: bam-file
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: metric-accumulation-level
              value: "{{workflow.parameters.picard-metric-accumulation-level}}"
      - name: cancer-collect-insert-size-metrics
        dependencies: [cancer-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: insert-size-metrics
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: cancer
            - name: bam-file
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: metric-accumulation-level
              value: "{{workflow.parameters.picard-metric-accumulation-level}}"
      - name: normal-collect-alignment-summary-metrics
        dependencies: [normal-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: align-summary-metrics
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: normal
            - name: bam-file
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: metric-accumulation-level
              value: "{{workflow.parameters.picard-metric-accumulation-level}}"
      - name: cancer-collect-alignment-summary-metrics
        dependencies: [cancer-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: align-summary-metrics
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: cancer
            - name: bam-file
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: metric-accumulation-level
              value: "{{workflow.parameters.picard-metric-accumulation-level}}"
###HSMetrics roi
      - name: normal-collect-roi-hs-metrics
        dependencies: [normal-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: collect-hs-metrics
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: normal
            - name: bam-file
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: metric-accumulation-level
              value: "{{workflow.parameters.picard-metric-accumulation-level}}"
            - name: bait-intervals
              value: "{{workflow.parameters.bait-intervals}}"
            - name: target-intervals
              value: "{{workflow.parameters.target-intervals}}"
            - name: per_target_coverage
              value: false
            - name: per_base_coverage
              value: false
            - name: output_prefix
              value: "roi"
            - name: minimum_mapping_quality
              value: "{{workflow.parameters.qc_minimum_mapping_quality}}"
            - name: minimum_base_quality
              value: "{{workflow.parameters.qc_minimum_base_quality}}"
      - name: cancer-collect-roi-hs-metrics
        dependencies: [cancer-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: collect-hs-metrics
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: cancer
            - name: bam-file
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: metric-accumulation-level
              value: "{{workflow.parameters.picard-metric-accumulation-level}}"
            - name: bait-intervals
              value: "{{workflow.parameters.bait-intervals}}"
            - name: target-intervals
              value: "{{workflow.parameters.target-intervals}}"
            - name: per_target_coverage
              value: false
            - name: per_base_coverage
              value: false
            - name: output_prefix
              value: "roi"
            - name: minimum_mapping_quality
              value: "{{workflow.parameters.qc_minimum_mapping_quality}}"
            - name: minimum_base_quality
              value: "{{workflow.parameters.qc_minimum_base_quality}}"
##DetailedHSMetrics
      - name: normal-collect-summary-hs-metrics
        dependencies: [normal-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: collect-hs-metrics
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: normal
            - name: bam-file
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: metric-accumulation-level
              value: "{{workflow.parameters.picard-metric-accumulation-level}}"
            - name: bait-intervals
              value: "{{workflow.parameters.bait-intervals}}"
            - name: target-intervals
              value: "{{workflow.parameters.target-intervals}}"
            - name: per_target_coverage
              value: false
            - name: per_base_coverage
              value: false
            - name: output_prefix
              value: "summary"
            - name: minimum_mapping_quality
              value: "{{workflow.parameters.qc_minimum_mapping_quality}}"
            - name: minimum_base_quality
              value: "{{workflow.parameters.qc_minimum_base_quality}}"
      - name: cancer-collect-summary-hs-metrics
        dependencies: [cancer-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: collect-hs-metrics
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: cancer
            - name: bam-file
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: metric-accumulation-level
              value: "{{workflow.parameters.picard-metric-accumulation-level}}"
            - name: bait-intervals
              value: "{{workflow.parameters.bait-intervals}}"
            - name: target-intervals
              value: "{{workflow.parameters.target-intervals}}"
            - name: per_target_coverage
              value: false
            - name: per_base_coverage
              value: false
            - name: output_prefix
              value: "summary"
            - name: minimum_mapping_quality
              value: "{{workflow.parameters.qc_minimum_mapping_quality}}"
            - name: minimum_base_quality
              value: "{{workflow.parameters.qc_minimum_base_quality}}"
## PerBase Metrics
      - name: normal-collect-base-hs-metrics
        dependencies: [normal-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: collect-hs-metrics
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: normal
            - name: bam-file
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: metric-accumulation-level
              value: "{{workflow.parameters.picard-metric-accumulation-level}}"
            - name: bait-intervals
              value: "{{workflow.parameters.bait-intervals}}"
            - name: target-intervals
              value: "{{workflow.parameters.target-intervals}}"
            - name: per_target_coverage
              value: false
            - name: per_base_coverage
              value: true
            - name: output_prefix
              value: "base"
            - name: minimum_mapping_quality
              value: "{{workflow.parameters.qc_minimum_mapping_quality}}"
            - name: minimum_base_quality
              value: "{{workflow.parameters.qc_minimum_base_quality}}"
      - name: cancer-collect-base-hs-metrics
        dependencies: [cancer-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: collect-hs-metrics
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: cancer
            - name: bam-file
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: metric-accumulation-level
              value: "{{workflow.parameters.picard-metric-accumulation-level}}"
            - name: bait-intervals
              value: "{{workflow.parameters.bait-intervals}}"
            - name: target-intervals
              value: "{{workflow.parameters.target-intervals}}"
            - name: per_target_coverage
              value: false
            - name: per_base_coverage
              value: true
            - name: output_prefix
              value: "base"
            - name: minimum_mapping_quality
              value: "{{workflow.parameters.qc_minimum_mapping_quality}}"
            - name: minimum_base_quality
              value: "{{workflow.parameters.qc_minimum_base_quality}}"
## Per Target Metrics
      - name: normal-collect-target-hs-metrics
        dependencies: [normal-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: collect-hs-metrics
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: normal
            - name: bam-file
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: metric-accumulation-level
              value: "{{workflow.parameters.picard-metric-accumulation-level}}"
            - name: bait-intervals
              value: "{{workflow.parameters.bait-intervals}}"
            - name: target-intervals
              value: "{{workflow.parameters.target-intervals}}"
            - name: per_target_coverage
              value: true
            - name: per_base_coverage
              value: false
            - name: output_prefix
              value: "target"
            - name: minimum_mapping_quality
              value: "{{workflow.parameters.qc_minimum_mapping_quality}}"
            - name: minimum_base_quality
              value: "{{workflow.parameters.qc_minimum_base_quality}}"
      - name: cancer-collect-target-hs-metrics
        dependencies: [cancer-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: collect-hs-metrics
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: cancer
            - name: bam-file
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: metric-accumulation-level
              value: "{{workflow.parameters.picard-metric-accumulation-level}}"
            - name: bait-intervals
              value: "{{workflow.parameters.bait-intervals}}"
            - name: target-intervals
              value: "{{workflow.parameters.target-intervals}}"
            - name: per_target_coverage
              value: true
            - name: per_base_coverage
              value: false
            - name: output_prefix
              value: "target"
            - name: minimum_mapping_quality
              value: "{{workflow.parameters.qc_minimum_mapping_quality}}"
            - name: minimum_base_quality
              value: "{{workflow.parameters.qc_minimum_base_quality}}"
#samtools flagstat
      - name: normal-samtools-flagstat
        dependencies: [normal-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: samtools-flagstat
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: normal
            - name: bam-file
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
      - name: cancer-samtools-flagstat
        dependencies: [cancer-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: samtools-flagstat
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: cancer
            - name: bam-file
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
#select_vars
      - name: select-variants
        dependencies: [bootstrap-data]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: select-variants
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: normal
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: vcf-ref
              value: "{{workflow.parameters.omni-vcf}}"
            - name: target-intervals
              value: "{{workflow.parameters.target-intervals}}"
#verify_bam
      - name: normal-verify-bam
        dependencies: [select-variants,normal-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: verify-bamid
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: normal
            - name: bam-file
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: vcf-ref
              value: "{{tasks.select-variants.outputs.parameters.filtered_vcf}}"
      - name: cancer-verify-bam
        dependencies: [select-variants,cancer-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: verify-bamid
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: data-type
              value: cancer
            - name: bam-file
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: vcf-ref
              value: "{{tasks.select-variants.outputs.parameters.filtered_vcf}}"
####Concordance
      - name: concordance
        dependencies: [cancer-index-bam,normal-index-bam]
        templateRef:
          name: immuno-somatic-exome-workflow
          template: concordance
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: cancer-bam
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: normal-bam
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: vcf-ref
              value: "{{workflow.parameters.somalier-vcf}}"
##DetectVariants
#dependencies: [normal-index-bam,cancer-index-bam]
##MUTECT BLOCK
      - name: mutect-split-interval-list
        dependencies: [normal-index-bam,cancer-index-bam]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: split-interval-list
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: interval-list
              value: "{{workflow.parameters.mutect-interval-list}}"
            - name: scatter-count
              value: "{{workflow.parameters.scatter-count}}"
            - name: service
              value: "mutect"
      - name: mutect-workflow
        dependencies: [mutect-split-interval-list]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: mutect-workflow
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: scatter-count
              value: "{{workflow.parameters.scatter-count}}"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: cancer-bam
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
            - name: normal-bam
              value: "{{tasks.normal-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
      - name: mutect-merge
        dependencies: [mutect-workflow]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: mutect-merge
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: id
              value: "{{workflow.parameters.id}}"
      - name: mutect-index-vcf
        dependencies: [mutect-merge]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: index-vcf
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: service
              value: "mutect"
            - name: vcf
              value: "{{tasks.mutect-merge.outputs.parameters.mutect-merged-vcf}}"
      - name: mutect-fp-filter
        dependencies: [mutect-index-vcf]
        templateRef:
          name: immuno-somatic-exome-detect-vars
          template: fp-filter
        arguments:
          parameters:
            - name: pvc-name
              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
            - name: "cpu"
              value: "12"
            - name: "mem"
              value: "32Gi"
            - name: output-dir
              value: "{{workflow.parameters.output-dir}}"
            - name: id
              value: "{{workflow.parameters.id}}"
            - name: service
              value: "mutect"
            - name: vcf
              value: "{{tasks.mutect-merge.outputs.parameters.mutect-merged-vcf}}"
            - name: reference
              value: "{{workflow.parameters.genome-reference}}"
            - name: cancer-bam
              value: "{{tasks.cancer-exome-apply-bqsr.outputs.parameters.bqsr_final_bam}}"
## END MUTECT BLOCK
#      - name: ####
#        dependencies: [#####]
#        templateRef:
#          name: immuno-somatic-exome-detect-vars
#          template: #####
#        arguments:
#          parameters:
#            - name: pvc-name
#              value: "{{tasks.generate-pvc-data.outputs.parameters.pvc-name}}"
#            - name: "cpu"
#              value: "12"
#            - name: "mem"
#              value: "32Gi"
#            - name: output-dir
#              value: "{{workflow.parameters.output-dir}}"
