apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: immuno-somatic-exome-detect-vars
spec:
  volumes:
    - name: pvc-reference
      persistentVolumeClaim:
        claimName: workflow-ref-hg38-dev #### This is subject to change.
  imagePullSecrets:
    - name: mgbio-cred
    - name: mcdb-bot
  templates:
#BEGIN MUTECT BLOCK
  - name: mutect-workflow
    inputs:
      parameters:
      - name: pvc-name
      - name: output-dir
      - name: "cpu"
      - name: "mem"
      - name: scatter-count
      - name: id
      - name: reference
      - name: cancer-bam
      - name: normal-bam
    podSpecPatch: '{"containers":[{"name":"main", "resources":{"requests":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }, "limits":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }}}]}'
    volumes:
      - name: '{{inputs.parameters.pvc-name}}'
        persistentVolumeClaim:
          claimName: '{{inputs.parameters.pvc-name}}'
    container:
      image: docker.cancerdb.io/mgbio-workflow/mutect2:4.1.2.0
      env:
      - name: REFGENOME
        value: "{{inputs.parameters.reference}}"
      - name: CANCERBAM
        value: "{{inputs.parameters.cancer-bam}}"
      - name: NORMALBAM
        value: "{{inputs.parameters.normal-bam}}"
      - name: OUTPUTDIR
        value: "{{inputs.parameters.output-dir}}"
      - name: ID
        value: "{{inputs.parameters.id}}"
      - name: PARALLEL
        value: "{{inputs.parameters.scatter-count}}"
      command: ["/bin/bash"]
      args: ["/root/mutect2.sh"]
      imagePullPolicy: Always
      volumeMounts:
      - name: '{{inputs.parameters.pvc-name}}'
        mountPath: /data
      - name: pvc-reference
        mountPath: /ref-hg38
  - name: mutect-merge
    inputs:
      parameters:
      - name: pvc-name
      - name: output-dir
      - name: "cpu"
      - name: "mem"
      - name: id
    podSpecPatch: '{"containers":[{"name":"main", "resources":{"requests":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }, "limits":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }}}]}'
    volumes:
      - name: '{{inputs.parameters.pvc-name}}'
        persistentVolumeClaim:
          claimName: '{{inputs.parameters.pvc-name}}'
    container:
      image: docker.cancerdb.io/mgbio-workflow/mutect-merge:1.3.1
      env:
      - name: OUTPUTDIR
        value: "{{inputs.parameters.output-dir}}"
      - name: ID
        value: "{{inputs.parameters.id}}"
      imagePullPolicy: Always
      volumeMounts:
      - name: '{{inputs.parameters.pvc-name}}'
        mountPath: /data
      - name: pvc-reference
        mountPath: /ref-hg38
    outputs:
      parameters:
        - name: mutect-merged-vcf
          value: "{{inputs.parameters.output-dir}}/mutect/{{inputs.parameters.id}}.vcf.gz"
##END MUTEC BLOCK
##BEGIN STRELKA BLOCK
  - name: strelka-run
    inputs:
      parameters:
      - name: pvc-name
      - name: output-dir
      - name: "cpu"
      - name: "mem"
      - name: threads
      - name: reference
      - name: cancer-bam
      - name: normal-bam
    podSpecPatch: '{"containers":[{"name":"main", "resources":{"requests":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }, "limits":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }}}]}'
    volumes:
      - name: '{{inputs.parameters.pvc-name}}'
        persistentVolumeClaim:
          claimName: '{{inputs.parameters.pvc-name}}'
    container:
      image: mgibio/strelka-cwl:2.9.9
      command: ['/usr/bin/perl']
      args: ["/usr/bin/docker_helper.pl", "{{inputs.parameters.threads}}", "{{inputs.parameters.output-dir}}/strelka", "--tumorBam={{inputs.parameters.cancer-bam}}", "--normalBam={{inputs.parameters.normal-bam}}", "--referenceFasta={{inputs.parameters.reference}}", "--exome"]
      imagePullPolicy: Always
      volumeMounts:
      - name: '{{inputs.parameters.pvc-name}}'
        mountPath: /data
      - name: pvc-reference
        mountPath: /ref-hg38
    outputs:
      parameters:
        - name: snvs
          value: "{{inputs.parameters.output-dir}}/strelka/results/variants/somatic.snvs.vcf.gz"
        - name: indels
          value: "{{inputs.parameters.output-dir}}/strelka/results/variants/somatic.indels.vcf.gz"
  - name: strelka-add-gt
    inputs:
      parameters:
      - name: pvc-name
      - name: output-dir
      - name: "cpu"
      - name: "mem"
      - name: data-type #indels vs snvs
      - name: vcf
    podSpecPatch: '{"containers":[{"name":"main", "resources":{"requests":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }, "limits":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }}}]}'
    volumes:
      - name: '{{inputs.parameters.pvc-name}}'
        persistentVolumeClaim:
          claimName: '{{inputs.parameters.pvc-name}}'
    container:
      image: docker.cancerdb.io/mgbio-workflow/strelka-gt:1.0.0
      command: ['/usr/bin/perl']
      args: ["/root/run_step.pl", "{{inputs.parameters.vcf}}", "{{inputs.parameters.output-dir}}/strelka/{{inputs.parameters.data-type}}"]
      imagePullPolicy: Always
      volumeMounts:
      - name: '{{inputs.parameters.pvc-name}}'
        mountPath: /data
      - name: pvc-reference
        mountPath: /ref-hg38
    outputs:
      parameters:
        - name: gt_vcf
          value: "{{inputs.parameters.output-dir}}/strelka/{{inputs.parameters.data-type}}/add_gt.vcf"
##END STRELKA BLOCK
##BEGIN VARSCAN BLOCK
  - name: varscan-workflow
    inputs:
      parameters:
      - name: pvc-name
      - name: output-dir
      - name: "cpu"
      - name: "mem"
      - name: cancer-bam
      - name: normal-bam
      - name: reference
      - name: strand-filter
      - name: min-coverage
      - name: min-var-freq
      - name: p-value
      - name: roi-bed
    podSpecPatch: '{"containers":[{"name":"main", "resources":{"requests":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }, "limits":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }}}]}'
    volumes:
      - name: '{{inputs.parameters.pvc-name}}'
        persistentVolumeClaim:
          claimName: '{{inputs.parameters.pvc-name}}'
    container:
      image: docker.cancerdb.io/mgbio-workflow/varscan-wrkflw:1.3.1
      env:
      - name: TUMORBAM
        value: "{{inputs.parameters.cancer-bam}}"
      - name: NORMALBAM
        value: "{{inputs.parameters.normal-bam}}"
      - name: REF
        value: "{{inputs.parameters.reference}}"
      - name: STRNDFLTR
        value: "{{inputs.parameters.strand-filter}}"
      - name: MINCVRGE
        value: "{{inputs.parameters.min-coverage}}"
      - name: MINVARFRQ
        value: "{{inputs.parameters.min-var-freq}}"
      - name: PVALUE
        value: "{{inputs.parameters.p-value}}"
      - name: OUTPUTDIR
        value: "{{inputs.parameters.output-dir}}"
      - name: ROIBED
        value: "{{inputs.parameters.roi-bed}}"
      imagePullPolicy: Always
      volumeMounts:
      - name: '{{inputs.parameters.pvc-name}}'
        mountPath: /data
      - name: pvc-reference
        mountPath: /ref-hg38
    outputs:
      parameters:
        - name: snps
          value: "{{inputs.parameters.output-dir}}/varscan/variants/output.snp.vcf"
        - name: indels
          value: "{{inputs.parameters.output-dir}}/varscan/variants/output.indels.vcf"
  - name: varscan-process
    inputs:
      parameters:
      - name: pvc-name
      - name: output-dir
      - name: "cpu"
      - name: "mem"
      - name: vcf
      - name: data-type
      - name: max-normal-freq
    podSpecPatch: '{"containers":[{"name":"main", "resources":{"requests":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }, "limits":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }}}]}'
    volumes:
      - name: '{{inputs.parameters.pvc-name}}'
        persistentVolumeClaim:
          claimName: '{{inputs.parameters.pvc-name}}'
    container:
      image: docker.cancerdb.io/mgbio-workflow/varscan-proc:1.3.1
      env:
      - name: VCF
        value: "{{inputs.parameters.vcf}}"
      - name: OUTPUTDIR
        value: "{{inputs.parameters.output-dir}}"
      - name: MAXNRMLFRQ
        value: "{{inputs.parameters.max-normal-freq}}"
      imagePullPolicy: Always
      volumeMounts:
      - name: '{{inputs.parameters.pvc-name}}'
        mountPath: /data
      - name: pvc-reference
        mountPath: /ref-hg38
    outputs:
      parameters:
        - name: somatic_hc
          value: "output.{{inputs.parameters.data-type}}.Somatic.hc.vcf"
        - name: somatic
          value: "output.{{inputs.parameters.data-type}}.Somatic.vcf"
        - name: germline_hc
          value: "output.{{inputs.parameters.data-type}}.Germline.hc.vcf"
        - name: germline
          value: "output.{{inputs.parameters.data-type}}.Germline.vcf"
        - name: loh_hc
          value: "output.{{inputs.parameters.data-type}}.LOH.hc.vcf"
        - name: loh
          value: "output.{{inputs.parameters.data-type}}.LOH.vcf"
  - name: varscan-post-process
    inputs:
      parameters:
      - name: pvc-name
      - name: output-dir
      - name: "cpu"
      - name: "mem"
      - name: snv-vcf
      - name: indels-vcf
      - name: hc-snv-vcf
      - name: hc-indels-vcf
    podSpecPatch: '{"containers":[{"name":"main", "resources":{"requests":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }, "limits":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }}}]}'
    volumes:
      - name: '{{inputs.parameters.pvc-name}}'
        persistentVolumeClaim:
          claimName: '{{inputs.parameters.pvc-name}}'
    container:
      image: docker.cancerdb.io/mgbio-workflow/varscan-post-proc:1.0.0
      env:
      - name: DATADIR
        value: "{{inputs.parameters.output-dir}}"
      command: ['/root/run_step.sh']
      args: ["{{inputs.parameters.snv-vcf}}", "{{inputs.parameters.indels-vcf}}", "{{inputs.parameters.hc-snv-vcf}}", "{{inputs.parameters.hc-indels-vcf}}"]
      imagePullPolicy: Always
      volumeMounts:
      - name: '{{inputs.parameters.pvc-name}}'
        mountPath: /data
      - name: pvc-reference
        mountPath: /ref-hg38
    outputs:
      parameters:
        - name: indexed_snvs
          value: "{{inputs.parameters.snv-vcf}}.gz"
        - name: indexed_hc_snvs
          value: "{{inputs.parameters.hc-snv-vcf}}.gz"
        - name: indexed_indels
          value: "{{inputs.parameters.indels-vcf}}.gz"
        - name: indexed_hc_indels
          value: "{{inputs.parameters.hc-indels-vcf}}"
##END VARSCAN BLOCK
  - name: index-vcf
    inputs:
      parameters:
      - name: pvc-name
      - name: output-dir
      - name: "cpu"
      - name: "mem"
      - name: service #mutect #skrelka #others
      - name: data-type
      - name: vcf
    podSpecPatch: '{"containers":[{"name":"main", "resources":{"requests":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }, "limits":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }}}]}'
    volumes:
      - name: '{{inputs.parameters.pvc-name}}'
        persistentVolumeClaim:
          claimName: '{{inputs.parameters.pvc-name}}'
    container:
      image: docker.cancerdb.io/mgbio-workflow/index-vcf:1.0.0
      env:
      - name: VCF
        value: "{{inputs.parameters.vcf}}"
      - name: OUTPUT
        value: "{{inputs.parameters.output-dir}}"
      - name: SERVICE
        value: "{{inputs.parameters.service}}"
      - name: DATATYPE
        value: "{{inputs.parameters.data-type}}"
      imagePullPolicy: Always
      volumeMounts:
      - name: '{{inputs.parameters.pvc-name}}'
        mountPath: /data
      - name: pvc-reference
        mountPath: /ref-hg38
    outputs:
      parameters:
        - name: vcf-index
          value: "{{inputs.parameters.vcf}}.tbi"
  - name: fp-filter
    inputs:
      parameters:
      - name: pvc-name
      - name: output-dir
      - name: "cpu"
      - name: "mem"
      - name: reference
      - name: cancer-bam
      - name: vcf
      - name: service
      - name: id
    podSpecPatch: '{"containers":[{"name":"main", "resources":{"requests":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }, "limits":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }}}]}'
    volumes:
      - name: '{{inputs.parameters.pvc-name}}'
        persistentVolumeClaim:
          claimName: '{{inputs.parameters.pvc-name}}'
    container:
      image: mgibio/fp_filter-cwl:1.0.1
      command: ['/usr/bin/perl']
      args: ["/usr/bin/fpfilter.pl", "--bam-readcount", "/usr/bin/bam-readcount", "--samtools", "/opt/samtools/bin/samtools", "--output", "{{inputs.parameters.output-dir}}/{{inputs.parameters.service}}/fpfilter_{{inputs.parameters.id}}.vcf", "--reference", "{{inputs.parameters.reference}}", "--bam-file", "{{inputs.parameters.cancer-bam}}", "--vcf-file", "{{inputs.parameters.vcf}}", "--sample", "TUMOR", "--min-var-freq", "0.05"]
      imagePullPolicy: Always
      volumeMounts:
      - name: '{{inputs.parameters.pvc-name}}'
        mountPath: /data
      - name: pvc-reference
        mountPath: /ref-hg38
    outputs:
      parameters:
        - name: unfiltered_vcf
          value: "{{inputs.parameters.vcf}}"
        - name: filtered_vcf
          value: "{{inputs.parameters.output-dir}}/{{inputs.parameters.service}}/fpfilter_{{inputs.parameters.id}}.vcf"
  - name: bgzip
    inputs:
      parameters:
      - name: pvc-name
      - name: "cpu"
      - name: "mem"
      - name: input-file
    podSpecPatch: '{"containers":[{"name":"main", "resources":{"requests":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }, "limits":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }}}]}'
    volumes:
      - name: '{{inputs.parameters.pvc-name}}'
        persistentVolumeClaim:
          claimName: '{{inputs.parameters.pvc-name}}'
    container:
      image: docker.cancerdb.io/mgbio-workflow/bgzip:1.0.0
      env:
      - name: INPUTFILE
        value: "{{inputs.parameters.input-file}}"
      imagePullPolicy: Always
      volumeMounts:
      - name: '{{inputs.parameters.pvc-name}}'
        mountPath: /data
      - name: pvc-reference
        mountPath: /ref-hg38
    outputs:
      parameters:
        - name: bgzipped_output
          value: "{{inputs.parameters.input-file}}.gz"
  - name: merge-vcf
    inputs:
      parameters:
      - name: pvc-name
      - name: output-dir
      - name: service
      - name: "cpu"
      - name: "mem"
      - name: id
      - name: vcf1
      - name: vcf2
    podSpecPatch: '{"containers":[{"name":"main", "resources":{"requests":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }, "limits":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }}}]}'
    volumes:
      - name: '{{inputs.parameters.pvc-name}}'
        persistentVolumeClaim:
          claimName: '{{inputs.parameters.pvc-name}}'
    container:
      image: mgibio/bcftools-cwl:1.3.1
      command: ['/opt/bcftools/bin/bcftools']
      args: ["concat", "--allow-overlaps", "--remove-duplicates", "--output-type", "z", "-o", "{{inputs.parameters.output-dir}}/{{inputs.parameters.service}}/merged_{{inputs.parameters.id}}.vcf.gz", "{{inputs.parameters.vcf1}}", "{{inputs.parameters.vcf2}}"]
      env:
      - name: OUTPUTDIR
        value: "{{inputs.parameters.output-dir}}"
      - name: ID
        value: "{{inputs.parameters.id}}"
      imagePullPolicy: Always
      volumeMounts:
      - name: '{{inputs.parameters.pvc-name}}'
        mountPath: /data
      - name: pvc-reference
        mountPath: /ref-hg38
    outputs:
      parameters:
        - name: merged-vcf
          value: "{{inputs.parameters.output-dir}}/{{inputs.parameters.service}}/merged_{{inputs.parameters.id}}.vcf.gz"
  - name: rename-sample
    inputs:
      parameters:
      - name: pvc-name
      - name: output-dir
      - name: "cpu"
      - name: "mem"
      - name: vcf
      - name: sample-to-replace
      - name: sample-new-name
    podSpecPatch: '{"containers":[{"name":"main", "resources":{"requests":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }, "limits":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }}}]}'
    volumes:
      - name: '{{inputs.parameters.pvc-name}}'
        persistentVolumeClaim:
          claimName: '{{inputs.parameters.pvc-name}}'
    container:
      image: docker.cancerdb.io/mgbio-workflow/rename-sample:1.9
      command: ['/bin/bash']
      args: ["/root/run_step.sh", "{{inputs.parameters.sample-to-replace}}", "{{inputs.parameters.sample-new-name}}", "{{inputs.parameters.vcf}}"]
      imagePullPolicy: Always
      volumeMounts:
      - name: '{{inputs.parameters.pvc-name}}'
        mountPath: /data
      - name: pvc-reference
        mountPath: /ref-hg38
    outputs:
      parameters:
        - name: renamed_vcf
          value: "{{inputs.parameters.vcf}}"
  - name: variant-filtration
    inputs:
      parameters:
      - name: pvc-name
      - name: output-dir
      - name: "cpu"
      - name: "mem"
      - name: vcf
      - name: filtered-vcf
      - name: service #varscan
      - name: id
      - name: reference
    podSpecPatch: '{"containers":[{"name":"main", "resources":{"requests":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }, "limits":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }}}]}'
    volumes:
      - name: '{{inputs.parameters.pvc-name}}'
        persistentVolumeClaim:
          claimName: '{{inputs.parameters.pvc-name}}'
    container:
      image: mgibio/gatk-cwl:3.6.0
      command: ['/usr/bin/java']
      args: ["-Xmx4g", "-jar", "/opt/GenomeAnalysisTK.jar", "-T", "VariantFiltration", "--maskName", "processSomatic", "--filterNotInMask", "-o", "{{inputs.parameters.output-dir}}/{{inputs.parameters.service}}/merged_{{inputs.parameters.id}}.vcf.gz", "-R", "{{inputs.parameters.reference}}", "--variant", "{{inputs.parameters.vcf}}", "--mask", "{{inputs.parameters.filtered-vcf}}"]
      imagePullPolicy: Always
      volumeMounts:
      - name: '{{inputs.parameters.pvc-name}}'
        mountPath: /data
      - name: pvc-reference
        mountPath: /ref-hg38
    outputs:
      parameters:
        - name: merged-filter-vcf
          value: "{{inputs.parameters.output-dir}}/{{inputs.parameters.service}}/merged_{{inputs.parameters.id}}.vcf.gz"
  - name: intervals-to-bed
    inputs:
      parameters:
      - name: pvc-name
      - name: output-dir
      - name: "cpu"
      - name: "mem"
      - name: service
      - name: interval-list
    podSpecPatch: '{"containers":[{"name":"main", "resources":{"requests":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }, "limits":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }}}]}'
    volumes:
      - name: '{{inputs.parameters.pvc-name}}'
        persistentVolumeClaim:
          claimName: '{{inputs.parameters.pvc-name}}'
    container:
      image: docker.cancerdb.io/mgbio-workflow/int-to-bed:1.0.0
      env:
      - name: INTLIST
        value: "{{inputs.parameters.interval-list}}"
      imagePullPolicy: Always
      volumeMounts:
      - name: '{{inputs.parameters.pvc-name}}'
        mountPath: /data
      - name: pvc-reference
        mountPath: /ref-hg38
    outputs:
      parameters:
        - name: interval_bed
          value: "{{inputs.parameters.output-dir}}/{{inputs.parameters.service}}/interval_list.bed"
  - name: split-interval-list
    inputs:
      parameters:
      - name: pvc-name
      - name: "cpu"
      - name: "mem"
      - name: interval-list #mutect-interval-list
      - name: scatter-count #5
      - name: service #mutect
      - name: output-dir
    podSpecPatch: '{"containers":[{"name":"main", "resources":{"requests":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }, "limits":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }}}]}'
    volumes:
      - name: '{{inputs.parameters.pvc-name}}'
        persistentVolumeClaim:
          claimName: '{{inputs.parameters.pvc-name}}'
    container:
      image: docker.cancerdb.io/mgbio-workflow/split-ints:v1.3.1
      command: ['/usr/bin/perl']
      args: ["/root/split_interval_list_helper.pl", "OUTPUT=", "{{inputs.parameters.output-dir}}/{{inputs.parameters.service}}/split-ints", "INPUT=", "{{inputs.parameters.interval-list}}", "SCATTER_COUNT=", "{{inputs.parameters.scatter-count}}"]
      imagePullPolicy: Always
      volumeMounts:
      - name: '{{inputs.parameters.pvc-name}}'
        mountPath: /data
      - name: pvc-reference
        mountPath: /ref-hg38
    outputs:
      parameters:
        - name: split_interval_lists
          value: "{{inputs.parameters.output-dir}}/{{inputs.parameters.service}}/split-ints"

  #- name: ###
  #  inputs:
  #    parameters:
  #    - name: pvc-name
  #    - name: output-dir
  #    - name: "cpu"
  #    - name: "mem"
  #    - name: threads
  #    - name: ###
  #    - name: ###
  #    - name: ###
  #  podSpecPatch: '{"containers":[{"name":"main", "resources":{"requests":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }, "limits":{"memory": "{{inputs.parameters.mem}}", "cpu": "{{inputs.parameters.cpu}}" }}}]}'
  #  volumes:
  #    - name: '{{inputs.parameters.pvc-name}}'
  #      persistentVolumeClaim:
  #        claimName: '{{inputs.parameters.pvc-name}}'
  #  container:
  #    image: ##### docker.cancerdb.io/mgbio-workflow/
  #    env:
  #    - name: ###
  #      value: ###
  #    command: ['###']
  #    args: ["###"]
  #    imagePullPolicy: Always
  #    volumeMounts:
  #    - name: '{{inputs.parameters.pvc-name}}'
  #      mountPath: /data
  #    - name: pvc-reference
  #      mountPath: /ref-hg38
  #  outputs:
  #    parameters:
  #      - name: ###
  #        value: ###
